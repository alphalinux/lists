<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-Hardware Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-Hardware Archive<BR> EV56 and FPU (long)</H1> 
	
<!-- received="Wed Dec 15 18:39:44 1999" -->
<!-- isoreceived="19991216023944" -->
<!-- sent="Wed, 15 Dec 1999 19:26:36 +0100" -->
<!-- isosent="19991215182636" -->
<!-- name="José Javier Zarate" -->
<!-- email="jzarate@unav.es" -->
<!-- subject="EV56 and FPU (long)" -->
<!-- id="3857DD5C.275C7695@unav.es" -->
<STRONG>Subject: </STRONG>EV56 and FPU (long)<BR>
<STRONG>From: </STRONG>José Javier Zarate (<EM>jzarate@unav.es</EM>)<BR>
<STRONG>Date: </STRONG>Wed Dec 15 10:26:36 1999
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#12">[ date ]</A>
<A HREF="index.shtml#12">[ thread ]</A>
<A HREF="subject.shtml#12">[ subject ]</A>
<A HREF="author.shtml#12">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0013.shtml">Phillip Ezolt: "Re: EV56 and FPU (long)"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0011.shtml">Rich Payne: "Re: as255/redhat-linux6.0/x-server doesn't work"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0013.shtml">Phillip Ezolt: "Re: EV56 and FPU (long)"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Dear all
<BR>
<P>I am not sure if this are the right lists so if you know better places
<BR>
to ask please let me know. Excuse also the cross posting but I am
<BR>
desperate.
<BR>
<P>Not my english language skills neither my programming skills are very
<BR>
good so please excuse my possible manifestations of ignorance.
<BR>
<P>I am using a computer with EV56 microprocessor 633 MHz, API 164UX 2 MB
<BR>
cache motherboard, 256 MB RAM and OS RedHat 6.0, kernel 2.2.5-16.
<BR>
<P><P>Well, the question is that I am trying to make run a pharmacokinetic
<BR>
modelling program under Alpha/Linux.
<BR>
The program comes as general Fortran code that you have to compile.
<BR>
<P>Well, the first question is that since I installed 
<BR>
For setting up the program I should know some values referring to the
<BR>
FPU characteristics. I will cite quoted from the installation manual:
<BR>
<P><P>&quot;REPS  Machine precision. The smallest floating point number
<BR>
representable
<BR>
in the machine such that when added to 1 the result sum is not 1.
<BR>
TOL  Machine tolerance. The smallest floating point number representable
<BR>
in the machine divided by machine precision.
<BR>
LARGE  Machine infinity. This is the largest floating point number
<BR>
representable in the machine.
<BR>
EPS  Mantissa lenght. This is the number 2**(-m), where m is the number
<BR>
of binary digits occurring in the floating point mantissa.
<BR>
SREPS  Same as REPS but always single precision.
<BR>
STOL  Same as TOL but always single precision.
<BR>
In single precision NONMEM, these six nunmbers are represented as
<BR>
integer values in the integer variables IREPS, ITOL, LARGE, IEPS,
<BR>
ISREPS, ISTOL.
<BR>
In double precision NONMEM, double precision versions of REPS, TOL, and
<BR>
LARGE are plced as pairs of integr values in two-dimensional integer
<BR>
arrays IREPS, ITOL and LARGE. Single precision versions of EPS, ISREPS
<BR>
and ISTOL.
<BR>
The integer values in BLKDAT (a subroutine of the program) are made
<BR>
equivalent via FORTRAN EQUIVALENCE statements to floating point
<BR>
variables of the appropiate precisions.&quot;
<BR>
<P>Double precision values are:
<BR>
&quot;
<BR>
*     IEEE CONSTANTS
<BR>
*
<BR>
C     DATA IREPS,ITOL,LARGE,IEPS/1018167296,0,55574528,0,
<BR>
C    1                          2146435071,-1,864026624/
<BR>
C     DATA ISREPS,ISTOL/872415232,201326592/
<BR>
*
<BR>
<P>*
<BR>
*     INTEL CHIP CONSTANTS
<BR>
*
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATA IREPS,ITOL,LARGE,IEPS/0,1018167296,0,55574528,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1                          -1,2146435071,864026624/
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DATA ISREPS,ISTOL/872415232,201326592/
<BR>
&quot;
<BR>
<P>Single precision values are:
<BR>
<P>&quot;
<BR>
*     IEEE CONSTANTS
<BR>
*
<BR>
C     DATA IREPS,ITOL,LARGE,IEPS/872415232,201326592,
<BR>
C    1                          2139095039,864026624/
<BR>
C     DATA ISREPS,ISTOL/872415232,201326592/
<BR>
*
<BR>
&quot;
<BR>
<P>I have used Intel and IEEE values but this appears to cause errors
<BR>
during
<BR>
execution (in test runs I get floating point exceptions) unless I
<BR>
compile without optimization. Intel values allow any kind of options
<BR>
when compiling.
<BR>
So, could any of you know those values for my microprocessor or where to
<BR>
find them? I will try to give you more information as soon as I can find
<BR>
it.
<BR>
<P><P>When comparing the time it needs for some problems with the same time
<BR>
from a PIII 450 MHz it simply trounces the Alpha in some kind of
<BR>
problems (by a factor of two), while resolving some other problems
<BR>
result in the Alpha outperforming the PIII by a factor or two. I am
<BR>
really lost.
<BR>
Are there any benckmarking utilities available that allow me to check if
<BR>
the machine is running properly? Or any simple way to check if
<BR>
everything is working properly?
<BR>
Could any of you have some Fortran program that I could compile and
<BR>
check the time it needs to execute?
<BR>
Are there any mods I could perform to improve the computer performance?
<BR>
<P><P>As someone appears to be using the same compilers as I do, would it be
<BR>
possible to know what the program is doing (wich subroutines it is using
<BR>
during a givwen run an d how much time is it taking). Back to my times
<BR>
of BASIC (sorry) and Pascal you could do it and see wich lines of code
<BR>
were being executed. Being a program used for clinical purposes I cannot
<BR>
modify the source code without previous agreement of the makes but I
<BR>
think that I could apply different optimizations to different
<BR>
subroutines, as I have seen that applying different optimization levels
<BR>
to the whole lot appear to change favourably the performance on some
<BR>
problems and degrade it on some others. Any clues would be very welcome.
<BR>
<P><P>When installing the program I have also the choice of using single or
<BR>
double precision installation.
<BR>
Quoting again:
<BR>
&quot;Some scientific workstations are described as having &quot;64 bit
<BR>
architecture&quot;. This tipically describes the width of the data bus, not
<BR>
the size of the floating point word, wich is 32 bits. Double precison is
<BR>
recommended for such machines.&quot;
<BR>
<P>Supposing that the ability of having 64 bit long word allows the
<BR>
microprocessor to work with longer than standard single precision
<BR>
values so that I could install Single precision version without losing
<BR>
quality in the results and improving speed. Or, if someone knows enough
<BR>
about the architecture of the processor and how to do it, I could try to
<BR>
do what Intel Pentium (and next) do, perform various tasks in parallel.
<BR>
Any of those tricks would be very useful. If somebody knows how to
<BR>
convince the compiler for having such behaviour I would be very grateful
<BR>
if he or sehe could share his knowledge.
<BR>
<P><P>I have tried to overclock from 633 to 667 but since I did I get
<BR>
f77: Internal compiler error: program f771 got fatal signal 11
<BR>
when compiling large sets of *.f files.
<BR>
After getting back to 633 everything seems to be normal again.
<BR>
Any clues about overclocking? I thoght that 5% overclocking wasn't shuch
<BR>
a big deal.
<BR>
<P><P>Finally, floating point exception handling.
<BR>
Ther are various ways to do this in different architectures and OSs, I
<BR>
need that the program terminates in case of FP exception unless is
<BR>
underflow where is considered safe to set the value to zero. Under
<BR>
Compaq fortran compiler it appears to be done by the option fpe at
<BR>
different levels but I am not sure neither know what is gradual
<BR>
underflow (something proposed in the online manual as an alternative to
<BR>
setting the number to zero).
<BR>
<P><P>Thanks all and happy Christmas
<BR>
<P><PRE>
-- 
JJ Zarate
Departamento de Farmacia y Tecnologia Farmaceutica
<A HREF="http://www.unav.es/farmacia/dptos/farmytec/index.htm">http://www.unav.es/farmacia/dptos/farmytec/index.htm</A>
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0013.shtml">Phillip Ezolt: "Re: EV56 and FPU (long)"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0011.shtml">Rich Payne: "Re: as255/redhat-linux6.0/x-server doesn't work"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0013.shtml">Phillip Ezolt: "Re: EV56 and FPU (long)"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Mon Jan  3 11:15:07 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
