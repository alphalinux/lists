<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: 2.3.31 - shm broken on Alpha ? (fwd)</H1> 
	
<!-- received="Sun Dec 12 01:15:17 1999" -->
<!-- isoreceived="19991212091517" -->
<!-- sent="Sat, 11 Dec 1999 23:29:47 +0000 (GMT)" -->
<!-- isosent="19991211232947" -->
<!-- name="Dave Gilbert" -->
<!-- email="gilbertd@treblig.org" -->
<!-- subject="Re: 2.3.31 - shm broken on Alpha ? (fwd)" -->
<!-- id="Pine.LNX.4.10.9912112327030.605-200000@tardis.home.dave" -->
<!-- inreplyto="2.3.31 - shm broken on Alpha ? (fwd)" -->
<STRONG>Subject: </STRONG>Re: 2.3.31 - shm broken on Alpha ? (fwd)<BR>
<STRONG>From: </STRONG>Dave Gilbert (<EM>gilbertd@treblig.org</EM>)<BR>
<STRONG>Date: </STRONG>Sat Dec 11 15:29:47 1999
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#378">[ date ]</A>
<A HREF="index.shtml#378">[ thread ]</A>
<A HREF="subject.shtml#378">[ subject ]</A>
<A HREF="author.shtml#378">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0379.shtml">Charles L. Chandler: "Making the most of MVI"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0377.shtml">Ron Farrer: "Re: Very Cheap New Alpha 533 / PC164 Motherboards"</A>
<!-- nextthread="start" -->
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Hi,
<BR>
&nbsp;&nbsp;Included is a patch to fix the SHM problem on 2.3.31 kindly provided
<BR>
by Manfred Spraul on the Linux kernel list.
<BR>
<P>&nbsp;&nbsp;With that 2.3.31 is actually very usable!
<BR>
<P>Dave
<BR>
<P><P>
// $Header$
<BR>
// Kernel Version:
<BR>
//  VERSION = 2
<BR>
//  PATCHLEVEL = 3
<BR>
//  SUBLEVEL = 31
<BR>
//  EXTRAVERSION =
<BR>
--- 2.3/ipc/shm.c	Wed Dec  8 23:17:05 1999
<BR>
+++ build-2.3/ipc/shm.c	Sun Dec 12 00:08:36 1999
<BR>
@@ -32,6 +32,7 @@
<BR>
&nbsp;struct shmid_kernel /* extend struct shmis_ds with private fields */
<BR>
&nbsp;{	
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct shmid_ds		u;
<BR>
+	size_t			real_segsz;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long		shm_npages; /* size of segment (pages) */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pte_t			**shm_dir;  /* ptr to array of ptrs to frames -&gt; SHMMAX */ 
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct vm_area_struct	*attaches;  /* descriptors for attaches */
<BR>
@@ -89,7 +90,6 @@
<BR>
&nbsp;/* some statistics */
<BR>
&nbsp;static ulong swap_attempts = 0;
<BR>
&nbsp;static ulong swap_successes = 0;
<BR>
-static ulong used_segs = 0;
<BR>
&nbsp;
<BR>
&nbsp;void __init shm_init (void)
<BR>
&nbsp;{
<BR>
@@ -204,7 +204,11 @@
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_perm.key = key;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_perm.mode = (shmflg &amp; S_IRWXUGO);
<BR>
-	shp-&gt;u.shm_segsz = size;
<BR>
+	shp-&gt;real_segsz = size;
<BR>
+	if(size &lt; INT_MAX)
<BR>
+		shp-&gt;u.shm_segsz = size;
<BR>
+	 else
<BR>
+	 	shp-&gt;u.shm_segsz = INT_MAX;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_cpid = current-&gt;pid;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;attaches = NULL;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_lpid = shp-&gt;u.shm_nattch = 0;
<BR>
@@ -337,7 +341,7 @@
<BR>
&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(&amp;shm_info,0,sizeof(shm_info));
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shm_lockall();
<BR>
-		shm_info.used_ids = used_segs;
<BR>
+		shm_info.used_ids = shm_ids.in_use;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shm_info.shm_rss = shm_rss;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shm_info.shm_tot = shm_tot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shm_info.shm_swp = shm_swp;
<BR>
@@ -566,7 +570,7 @@
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;err = -ENOMEM;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr = 0;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;again:
<BR>
-		if (!(addr = get_unmapped_area(addr, (unsigned long)shp-&gt;u.shm_segsz)))
<BR>
+		if (!(addr = get_unmapped_area(addr, (unsigned long)shp-&gt;real_segsz)))
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out_unlock_up;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(addr &amp; (SHMLBA - 1)) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr = (addr + (SHMLBA - 1)) &amp; ~(SHMLBA - 1);
<BR>
@@ -593,7 +597,7 @@
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (addr &lt; current-&gt;mm-&gt;start_stack &amp;&amp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr &gt; current-&gt;mm-&gt;start_stack - PAGE_SIZE*(shp-&gt;shm_npages + 4))
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out_unlock_up;
<BR>
-	if (!(shmflg &amp; SHM_REMAP) &amp;&amp; find_vma_intersection(current-&gt;mm, addr, addr + (unsigned long)shp-&gt;u.shm_segsz))
<BR>
+	if (!(shmflg &amp; SHM_REMAP) &amp;&amp; find_vma_intersection(current-&gt;mm, addr, addr + (unsigned long)shp-&gt;real_segsz))
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto out_unlock_up;
<BR>
&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shm_unlock(shmid);
<BR>
@@ -957,7 +961,7 @@
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_perm.key,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shm_buildid(i, shp-&gt;u.shm_perm.seq),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_perm.mode,
<BR>
-				shp-&gt;u.shm_segsz,
<BR>
+				shp-&gt;real_segsz,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_cpid,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_lpid,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shp-&gt;u.shm_nattch,
<BR>
--- 2.3/include/linux/shm.h	Sun Nov  7 10:20:50 1999
<BR>
+++ build-2.3/include/linux/shm.h	Sun Dec 12 00:06:08 1999
<BR>
@@ -18,7 +18,7 @@
<BR>
&nbsp;
<BR>
&nbsp;struct shmid_ds {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct ipc_perm		shm_perm;	/* operation perms */
<BR>
-	size_t			shm_segsz;	/* size of segment (bytes) */
<BR>
+	int			shm_segsz;	/* size of segment (bytes) */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__kernel_time_t		shm_atime;	/* last attach time */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__kernel_time_t		shm_dtime;	/* last detach time */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__kernel_time_t		shm_ctime;	/* last change time */
<BR>
<P>--------------EB790BAB024D2D783277F688--
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0379.shtml">Charles L. Chandler: "Making the most of MVI"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0377.shtml">Ron Farrer: "Re: Very Cheap New Alpha 533 / PC164 Motherboards"</A>
<!-- nextthread="start" -->
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Mon Jan  3 11:15:10 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
