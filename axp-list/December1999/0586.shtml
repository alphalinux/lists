<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: Retrieving PC from (traversing) the stack on Alpha</H1> 
	
<!-- received="Fri Dec 17 17:53:14 1999" -->
<!-- isoreceived="19991218015314" -->
<!-- sent="Fri, 17 Dec 1999 12:51:20 -0500" -->
<!-- isosent="19991217175120" -->
<!-- name="Joseph A. Martin" -->
<!-- email="jmartin@linux08.mro.dec.com" -->
<!-- subject="Re: Retrieving PC from (traversing) the stack on Alpha" -->
<!-- id="199912171751.MAA24382@linux08.mro.dec.com" -->
<!-- inreplyto="XFMail.19991219094106.brianw.hall@compaq.com" -->
<STRONG>Subject: </STRONG>Re: Retrieving PC from (traversing) the stack on Alpha<BR>
<STRONG>From: </STRONG>Joseph A. Martin (<EM>jmartin@linux08.mro.dec.com</EM>)<BR>
<STRONG>Date: </STRONG>Fri Dec 17 09:51:20 1999
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#586">[ date ]</A>
<A HREF="index.shtml#586">[ thread ]</A>
<A HREF="subject.shtml#586">[ subject ]</A>
<A HREF="author.shtml#586">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0587.shtml">Designer Seven: "Re: Linux vs. OpenBSD vs. FreeBSD vs. NetBSD"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0585.shtml">Matthew Monacelli: "Re: UDB RH6.0 CD install problems with initial console"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0575.shtml">Brian Hall: "Retrieving PC from (traversing) the stack on Alpha"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0719.shtml">Brian Hall: "RE: Retrieving PC from (traversing) the stack on Alpha"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0575.shtml">Joseph A. Martin: "Re: Retrieving PC from (traversing) the stack on Alpha"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
<EM> &gt;Okay, after some research, I think I figured out how to get at the needed
</EM><BR>
<EM> &gt;Alpha registers:
</EM><BR>
<EM> &gt;
</EM><BR>
<EM> &gt;register unsigned long fptr __asm__(&quot;$15&quot;); /* get frame pointer? */
</EM><BR>
<EM> &gt;register unsigned long sptr __asm__(&quot;$30&quot;); /* get stack pointer? */
</EM><BR>
<P>If there is a frame pointer, that's how you'd find it.  However, there
<BR>
often isn't.  It depends on the compiler, and it depends on whether
<BR>
there are references to some outer scope or perhaps arguments passed
<BR>
on the stack.  (I may be thinking of SPARC here, so don't take me too
<BR>
seriously about the argument thing.)  More often than not there is no
<BR>
frame pointer and integer register 15 is treated as &quot;s6&quot; not &quot;fp&quot;.
<BR>
<P>To find the size of the (previous/next higher) stack frame:
<BR>
<P>/* Warning:  untested, uncompiled code fragment */
<BR>
<P>typdef unsigned int instruction;
<BR>
<P>/*
<BR>
&nbsp;* Of course, assembly code writers and compilers I haven't seen may
<BR>
&nbsp;* thwart this heuristic.
<BR>
&nbsp;*/
<BR>
#define is_lda_of_neg_from_30_to_30(X) (((X) &amp; 0xffff8000) == 0x23de8000)
<BR>
<P>/* This one assumes that the low 3 bits of the literal are zero. */
<BR>
#define is_stack_subq(X) (((X) &amp; 0xffe0ffff) == 0x43c0153e)
<BR>
<P>void stack_crawler(void)
<BR>
{
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register unsigned long ra __asm__(&quot;$26&quot;);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;register unsigned long sp __asm__(&quot;$30&quot;);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int frame_size;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instruction * instr = (instruction *)ra;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Look for certain kinds of instructions. */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(;;) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--instr;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_lda_of_neg_from_30_to_30(*instr)) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame_size = 0x10000 - (*instr &amp; 0xffff);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (is_stack_subq(*instr)) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frame_size = (*instr &gt;&gt; 13) &amp; 0xff;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*To tell which regs are stored where, travel forward looking
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* for STQs onto the stack.
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
<BR>
}
<BR>
<P><P><P><P><P>\Joe   [Joseph.Martin@Compaq.com	Joseph A. Martin
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compaq Computer Corporation
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;200 Forest Street MRO1-2/K20
<BR>
&nbsp;(508) 467-2100				Marlboro, MA  01752  U.S.A.
<BR>
&nbsp;]
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0587.shtml">Designer Seven: "Re: Linux vs. OpenBSD vs. FreeBSD vs. NetBSD"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0585.shtml">Matthew Monacelli: "Re: UDB RH6.0 CD install problems with initial console"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0575.shtml">Brian Hall: "Retrieving PC from (traversing) the stack on Alpha"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0719.shtml">Brian Hall: "RE: Retrieving PC from (traversing) the stack on Alpha"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0575.shtml">Joseph A. Martin: "Re: Retrieving PC from (traversing) the stack on Alpha"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Mon Jan  3 11:15:11 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
