<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> RE: Everyone's SRM woes</H1> 
	
<!-- received="Wed Mar 14 19:15:26 2001" -->
<!-- isoreceived="20010315031526" -->
<!-- sent="Wed, 14 Mar 2001 13:56:37 -0500" -->
<!-- isosent="20010314185637" -->
<!-- name="Kurt Ludwig" -->
<!-- email="Kurt.Ludwig@alpha-processor.com" -->
<!-- subject="RE: Everyone's SRM woes" -->
<!-- id="C3C5B71D8EB6D411B53700902732B4340E73D6@gateway.alpha-processor.com" -->
<!-- inreplyto="Everyone's SRM woes" -->
<STRONG>Subject: </STRONG>RE: Everyone's SRM woes<BR>
<STRONG>From: </STRONG>Kurt Ludwig (<EM>Kurt.Ludwig@alpha-processor.com</EM>)<BR>
<STRONG>Date: </STRONG>Wed Mar 14 10:56:37 2001
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#185">[ date ]</A>
<A HREF="index.shtml#185">[ thread ]</A>
<A HREF="subject.shtml#185">[ subject ]</A>
<A HREF="author.shtml#185">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0186.shtml">alvin: "Re: Everyone's SRM woes"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0184.shtml">Mike Foley: "RE: Everyone's SRM woes"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0188.shtml">KirkE@paccessglobal.com: "RE: Everyone's SRM woes"</A>
<LI><STRONG>Maybe reply:</STRONG> <A HREF="0106.shtml">Kurt Ludwig: "RE: Everyone's SRM woes"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
ok I'll be more specific then... the PC1* series had room for only 1 =)
<BR>
<P><P>Kurt
<BR>
<P><P>-----Original Message-----
<BR>
From: Alan Young [mailto:ayoung@teleport.com]
<BR>
Sent: Wednesday, March 14, 2001 11:21 AM
<BR>
To: axp-list@redhat.com
<BR>
Subject: Re: Everyone's SRM woes
<BR>
<P><P>Umm, I think you have that backward.  The LX has only enough room for
<BR>
one. The PC64 does have room for both.  I have both images in the PC64
<BR>
now.:)
<BR>
<P>Alan
<BR>
<P>Kurt Ludwig wrote:
<BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; well yes and no on the dual booters part. The PC* series only had 1MB of
</EM><BR>
<EM>&gt; flash on them so you would have to preform voodoo to get AlphaBIOS out and
</EM><BR>
<EM>&gt; put SRM in, or vice versa. If you had something like an AS1200 / AS800 /
</EM><BR>
<EM>&gt; etc. then you had enough room in the prom (2MB) for both. Even though the
</EM><BR>
<EM>&gt; capability was there to run either it was still a pain.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Kurt
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; -----Original Message-----
</EM><BR>
<EM>&gt; From: Alan Young [mailto:ayoung@teleport.com]
</EM><BR>
<EM>&gt; Sent: Wednesday, March 14, 2001 1:24 AM
</EM><BR>
<EM>&gt; To: axp-list@redhat.com
</EM><BR>
<EM>&gt; Subject: Re: Everyone's SRM woes
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Peter Petrakis wrote:
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Alan Young wrote:
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Agreed. Though like you said, these machines run UNIX not windows.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Well, my machines up til last year or so ran NT fairly regularly.
</EM><BR>
<EM>&gt; (I've kicked my Lightwave habit for the moment...)
</EM><BR>
<EM>&gt; The LX164 and PC64 and other machines were sold as &quot;dual booters&quot;.
</EM><BR>
<EM>&gt; You could run NT, Tru64 and even OpenVMS on a bunch of them.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; It's not an excuse to cop out of having a nice BIOS setup your hardware
</EM><BR>
<EM>&gt; &gt; and bootstrap your box.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Agreed.  I think this is why AlphaBIOS came into being.
</EM><BR>
<EM>&gt; It was step in the right direction.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; I don't fully understand why milo was needed to begin with.
</EM><BR>
<EM>&gt; &gt; If it was all just to switch palcode and mess with some registers then
</EM><BR>
<EM>&gt; &gt; why couldnt ARC/AB be extend to use that PAL and do the setup required
</EM><BR>
and
<BR>
<EM>&gt; your
</EM><BR>
<EM>&gt; &gt; off. The only thing you would care about is passing cli arguments and
</EM><BR>
you
<BR>
<EM>&gt; &gt; already could do that with ARC/AB.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Good Question.  I've never dug into that one.
</EM><BR>
<EM>&gt; One would guess that Linus' and/or DEC's original port may have attempted
</EM><BR>
<EM>&gt; to use the PALcode in the ARC firmware.  I've been trying to recall if
</EM><BR>
<EM>&gt; BLADE was developed on a SRM box or not.... Since SRM was being sold
</EM><BR>
<EM>&gt; seperately back then, MILO may have been a stopgap measure so people
</EM><BR>
<EM>&gt; did not have to pay extra to run a (semi-)free OS.  They may have had
</EM><BR>
<EM>&gt; ARC issues so something more SRM-like was substituted???
</EM><BR>
<EM>&gt; Could also be ARC was centered around a certain 32-bit OS and did
</EM><BR>
<EM>&gt; not &quot;fully&quot; support 64-bitness?
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; I love the help on &quot;ed&quot;. Try it , you'll get a laugh.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &quot;BASIC-like&quot;...:)
</EM><BR>
<EM>&gt; Try &quot;edit test&quot; and then list it.
</EM><BR>
<EM>&gt; THAT'S SHELL SCRIPT!
</EM><BR>
<EM>&gt; No wonder there's no room in the flash for hardware initialization!
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; &gt; I believe you can load the firmware off of CDROM too.  If I recall
</EM><BR>
<EM>&gt; &gt; &gt; right, I think this is how the firmware update CD works.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; I'm not sure of the exact mechenism that starts the firmware update CD.
</EM><BR>
<EM>&gt; &gt; It uses fwupdate, I dont know how that works.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Hmmm...I suppose fwupdate could be a program similar to aboot.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; &gt; &gt; EXT2 support in SRM is nice but whats stopping SRM from loading
</EM><BR>
linux
<BR>
<EM>&gt; &gt; &gt; &gt; off a FAT fs of which it already understands?
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; I thought SRM did not understand filesystems.  I thought it knew
</EM><BR>
<EM>&gt; &gt; &gt; enough about a device to pull physical blocks of media into memory
</EM><BR>
<EM>&gt; &gt; &gt; and execute the code from there... that's why aboot was written to
</EM><BR>
<EM>&gt; &gt; &gt; read the ext2 partition and load the kernel.(?)
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; SRM understands FS like FAT and ISO9660 but not the concept of
</EM><BR>
<EM>&gt; &gt; parititons.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; I have to try that file system command you gave in that other post.
</EM><BR>
<EM>&gt; Seems odd that it knows one without the other.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; &gt; What would really help for those that may still run NT or perfer
</EM><BR>
<EM>&gt; &gt; &gt; slightly more sane partition table format is if SRM could be told to
</EM><BR>
<EM>&gt; &gt; &gt; look for the boot block somewhere other than what is the DOS/PC
</EM><BR>
<EM>&gt; &gt; &gt; style partition table sector.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; I thought there where patches for aboot out there that let it understand
</EM><BR>
<EM>&gt; &gt; PC partition style?
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Yes, I coded one set of them.  They're in the axp-list archive.
</EM><BR>
<EM>&gt; Before I did my patches, Rumors were that patches had been done by
</EM><BR>
<EM>&gt; someone else too.  I couldn't find them.  The problem is that the SRM
</EM><BR>
<EM>&gt; boot block and the PC partition table occupy the same space on the hard
</EM><BR>
<EM>&gt; disk.  I've seen references to a work around, but to do that you lose
</EM><BR>
<EM>&gt; half the partition table entries in that block.  With Extended partitions
</EM><BR>
<EM>&gt; you could work around that.  My patches just handle the entries in the
</EM><BR>
<EM>&gt; primary partition block.  They would need a bit of code to traverse the
</EM><BR>
<EM>&gt; linked list of extended partitions.  I'm not sure how NT would react to
</EM><BR>
<EM>&gt; &quot;code&quot; for the boot block being there.  I've not tried to play with my
</EM><BR>
<EM>&gt; partition table.  I boot aboot from floppy.  yeah, a tad slow, but it
</EM><BR>
works.
<BR>
<EM>&gt;:)
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; &gt; Well, how about _removing_ some of the more esoteric features of SRM
</EM><BR>
to
<BR>
<EM>&gt; &gt; &gt; stand-alone executables.  I'm talking about things like memexer,
</EM><BR>
isacfg,
<BR>
<EM>&gt; &gt; &gt; etc. that are nice but take up space and you don't need them to boot
</EM><BR>
<EM>&gt; &gt; &gt; the machine all the time.  ARC/AlphaBIOS was good for this as it had a
</EM><BR>
<EM>&gt; &gt; &gt; SDK that you can program with your own add-ons  (ARCDOS being one
</EM><BR>
<EM>&gt; example).
</EM><BR>
<EM>&gt; &gt; &gt; The executables could be loaded from disk or floppy.  If those
</EM><BR>
features
<BR>
<EM>&gt; &gt; &gt; could be moved out of SRM and still being accessable (say on a
</EM><BR>
bootable
<BR>
<EM>&gt; &gt; &gt; CD) for those that need it, then you could put more enhancments into
</EM><BR>
<EM>&gt; &gt; &gt; the base SRM.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Here I disagree since those tools can aid the OEM, VAR, or Manufacturer
</EM><BR>
<EM>&gt; &gt; to troubleshoot and stress test the hardware. It would also be cost
</EM><BR>
<EM>&gt; prohibitive
</EM><BR>
<EM>&gt; &gt; from a manufacturing POV to assmeble a product with the &quot;full featured&quot;
</EM><BR>
<EM>&gt; firmware
</EM><BR>
<EM>&gt; &gt; and later reflash it to the econosize. The software could possibly
</EM><BR>
diverge
<BR>
<EM>&gt; from
</EM><BR>
<EM>&gt; &gt; it's trunk so much that it becomes it's own thing and has it's own bugs
</EM><BR>
<EM>&gt; ontop
</EM><BR>
<EM>&gt; &gt; of those of the &quot;original&quot; firmware.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Please reread the last half of my suggestion again.  I suggested that they
</EM><BR>
<EM>&gt; be
</EM><BR>
<EM>&gt; removed from the firmware image, I did not suggest to delete them
</EM><BR>
entirely.
<BR>
<EM>&gt; If the functionality could be retained in a standalone executable, then
</EM><BR>
<EM>&gt; nothing is lost and we can actually _gain_.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; And I was using memexer and isacfg as examples as that was all could think
</EM><BR>
<EM>&gt; off of the top of my head.  There could be better ones to migrate to a
</EM><BR>
<EM>&gt; stand alone executable.  Edit for instance...  Even PCs have this as a
</EM><BR>
<EM>&gt; seperate command once DOS has booted.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; &gt; I know you can't please everyone all the time.  And I know it
</EM><BR>
<EM>&gt; &gt; &gt; does boil down to money at some point.  It's too bad that at least
</EM><BR>
<EM>&gt; &gt; &gt; for video that the emulator couldn't be seperated from the console
</EM><BR>
<EM>&gt; &gt; &gt; in some way so people with old machines could at least update the
</EM><BR>
<EM>&gt; &gt; &gt; emulator.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; It probably could be made a seperate image though now you run into
</EM><BR>
<EM>&gt; &gt; problems with starting the initial firmware. On most Alphas the SROM
</EM><BR>
<EM>&gt; &gt; that executes at poweron is told to load the second rom image and
</EM><BR>
execute.
<BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Now if rom image number 2 was the bios emulator number 3 would be SRM.
</EM><BR>
<EM>&gt; &gt; There are two points of attack here now. Modify the SROM, which is a
</EM><BR>
read
<BR>
<EM>&gt; &gt; only chip to load image 2 then load and start image 3. Or fix
</EM><BR>
independant
<BR>
<EM>&gt; &gt; bios emulator rom so that when it's down initialize that it should
</EM><BR>
locate
<BR>
<EM>&gt; &gt; the next adjacent rom image (depending on jumper configuartion) and load
</EM><BR>
<EM>&gt; &gt; it.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; You could make your own SROM using the EBSDK, thats one. It has source
</EM><BR>
<EM>&gt; &gt; code for sx,lx, and dp. I'm talking about version 4.0 . To accomplish
</EM><BR>
<EM>&gt; &gt; option number two you would need the source to the bios emulator, which
</EM><BR>
I
<BR>
<EM>&gt; &gt; suspect won't be readily offered by Compqa so you're forced to seek
</EM><BR>
<EM>&gt; alternatives
</EM><BR>
<EM>&gt; &gt; like the one used by the xfree group.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Would you really need the source to the emulator?  I mean, if the
</EM><BR>
community
<BR>
<EM>&gt; could conveince Compaq to provide an occasional binary snapshot with a
</EM><BR>
<EM>&gt; README that said how to execute it, that would be similar to the binary
</EM><BR>
only
<BR>
<EM>&gt; that we have today in MILO.  You compile your custom code and link with
</EM><BR>
the
<BR>
<EM>&gt; emulator binary.  To me it seems like it would be a win for us and Compaq.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; I have accomplished the later but in a roundabout way. In my first
</EM><BR>
<EM>&gt; attempts
</EM><BR>
<EM>&gt; &gt; to use DBM for the LX I tried to load it from the FSB and wondered why I
</EM><BR>
<EM>&gt; heard
</EM><BR>
<EM>&gt; &gt; a few beeps but then nothing on my display (VGA). I then got clever and
</EM><BR>
<EM>&gt; &gt; renamed the file lx164nt.rom, put it on a floppy, and in srm entered
</EM><BR>
&quot;NT&quot;.
<BR>
<EM>&gt; &gt; which read the DBM ,loaded it, and executed it right over the SRM
</EM><BR>
console.
<BR>
<EM>&gt; &gt; Since the DBM image didnt have a bios emulator attached and the setup
</EM><BR>
<EM>&gt; &gt; routines that go with it. It didnt reset the console, it just loaded :-)
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Heehee... I thought of something similar to this a while ago.  Before
</EM><BR>
<EM>&gt; the concept of a generic Alpha kernel came to be, I worked a bit on
</EM><BR>
<EM>&gt; a boot/install loader that one could execute from ARC.  It would sit
</EM><BR>
<EM>&gt; on the CD as \ALPHA\ARCINST.EXE.  Then all you would need to do was hit
</EM><BR>
<EM>&gt; the &quot;Install Windows NT&quot; option from the ARC menu.  ARC would load and
</EM><BR>
<EM>&gt; run it.  The program would use then the ARC ID to identify which machine
</EM><BR>
<EM>&gt; specific Linux kernel to load and boot.
</EM><BR>
<EM>&gt;  
</EM><BR>
<EM>&gt; &gt; Speaking of the EBSDK. If one had it could one put it on an ftp
</EM><BR>
<EM>&gt; &gt; site and redistribute it? The license is a BSD'sh for Alpha only.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Well, I'm not a lawyer, but I'll take a stab...
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; 1. GRANT
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Compaq Computer Corporation (&quot;COMPAQ&quot;) grants you the right to use the
</EM><BR>
<EM>&gt; &gt; Software Programs  and Restricted Software Program (the &quot;Software&quot;)
</EM><BR>
<EM>&gt; &gt; specified above on any number of computers  according to the following
</EM><BR>
<EM>&gt; &gt; terms.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; You may copy, modify, and distribute the Software Programs (in both
</EM><BR>
<EM>&gt; &gt; source and object form) and  its documentation.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; This bit is interesting.  It sounds like you can distribute the
</EM><BR>
<EM>&gt; source and object code and documentation.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; You may distribute but not modify the Restricted Software Program.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; However, this bit may be bad.  What do they mean by &quot;Restricted
</EM><BR>
<EM>&gt; Software Program&quot;?  The whole kit?  It also seems to imply that you
</EM><BR>
<EM>&gt; can NOT modify whatever has been defined as &quot;Restricted&quot;.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; All copies of the Software and object code derived from the sources
</EM><BR>
<EM>&gt; &gt; are to be used solely within  products incorporating an integrated
</EM><BR>
<EM>&gt; &gt; circuit implementing the Alpha architecture. The permission  is granted
</EM><BR>
<EM>&gt; &gt; regardless of the origin of such integrated circuit provided that the
</EM><BR>
<EM>&gt; &gt; COMPAQ copyright  notice and these license terms appear in all copies.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; No problem there. :)   I think we can safely say that we all plan to use
</EM><BR>
<EM>&gt; it on Alpha boxen whether they be DEC, Compaq, Samsung or other.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; You may not use the name, logos, or trademarks of COMPAQ and affiliated
</EM><BR>
<EM>&gt; &gt; companies unless  agreed in a separate agreement. You agree to indemnify
</EM><BR>
<EM>&gt; &gt; and hold COMPAQ harmless for all  claims and related expenses incurred
</EM><BR>
<EM>&gt; &gt; by COMPAQ as a result of your use or distribution of the  Software and
</EM><BR>
<EM>&gt; &gt; object code.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; This also seems to imply that you can distribute code.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; 5. U.S. GOVERNMENT RESTRICTED RIGHTS
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Commercial Computer Software, and Computer Software Documentation, and
</EM><BR>
<EM>&gt; &gt; Technical Data for  Commercial Items are licensed to the U.S. Government
</EM><BR>
<EM>&gt; &gt; with COMPAQ's standard commercial  license and, when applicable, the
</EM><BR>
<EM>&gt; &gt; rights in DFAR 252.227-7015, &quot;Technical Data - Commercial  Items.&quot;
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; This bit definatly needs a lawyer.  DFAR is sticky when it comes to
</EM><BR>
rights.
<BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; 6. GENERAL
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; You are responsible for compliance with all applicable export or
</EM><BR>
re-export
<BR>
<EM>&gt; &gt; control laws and  regulations if you export the Software. This agreement
</EM><BR>
<EM>&gt; &gt; is governed by and is to be construed under  the laws of the
</EM><BR>
Commonwealth
<BR>
<EM>&gt; &gt; of Massachusetts.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; As long as there's no restricted encryption used in the code this should
</EM><BR>
<EM>&gt; be ok too.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; If you have any questions concerning this Agreement, please contact your
</EM><BR>
<EM>&gt; &gt; local COMPAQ sales  office or write to: Compaq Computer Corporation,
</EM><BR>
<EM>&gt; &gt; Software Business Practices, ZKO1-2/D22,  110 Spit Brook Road, Nashua,
</EM><BR>
<EM>&gt; &gt; NH 03062-2802.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Well, there you go.  Write 'em! :)
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &lt;snip&gt;
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; anybody know a lawyer?
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; The rest of those looks pretty reasonable to me, but I'm not a lawyer.
</EM><BR>
<EM>&gt; And I don't know one.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Alan
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; _______________________________________________
</EM><BR>
<EM>&gt; Axp-list mailing list
</EM><BR>
<EM>&gt; Axp-list@redhat.com
</EM><BR>
<EM>&gt; https://listman.redhat.com/mailman/listinfo/axp-list
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; _______________________________________________
</EM><BR>
<EM>&gt; Axp-list mailing list
</EM><BR>
<EM>&gt; Axp-list@redhat.com
</EM><BR>
<EM>&gt; https://listman.redhat.com/mailman/listinfo/axp-list
</EM><BR>
<P><P><P>_______________________________________________
<BR>
Axp-list mailing list
<BR>
Axp-list@redhat.com
<BR>
https://listman.redhat.com/mailman/listinfo/axp-list
<BR>
<P><P><P>_______________________________________________
<BR>
Axp-list mailing list
<BR>
Axp-list@redhat.com
<BR>
https://listman.redhat.com/mailman/listinfo/axp-list
<BR>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0186.shtml">alvin: "Re: Everyone's SRM woes"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0184.shtml">Mike Foley: "RE: Everyone's SRM woes"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0188.shtml">KirkE@paccessglobal.com: "RE: Everyone's SRM woes"</A>
<LI><STRONG>Maybe reply:</STRONG> <A HREF="0106.shtml">Kurt Ludwig: "RE: Everyone's SRM woes"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Tue Apr 10 10:35:32 2001 PDT <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
