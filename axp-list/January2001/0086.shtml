<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: memory address space on alpha Linux</H1> 
	
<!-- received="Sun Jan 07 20:36:47 2001" -->
<!-- isoreceived="20010108043647" -->
<!-- sent="Sun, 7 Jan 2001 15:21:09 -0500 (EST)" -->
<!-- isosent="20010107202109" -->
<!-- name="T. Daniel Crawford" -->
<!-- email="crawdad@vt.edu" -->
<!-- subject="Re: memory address space on alpha Linux" -->
<!-- id="Pine.LNX.4.30.0101071511110.23278-100000@orion.chem.vt.edu" -->
<!-- inreplyto="20010107120752.A26532@twiddle.net" -->
<STRONG>Subject: </STRONG>Re: memory address space on alpha Linux<BR>
<STRONG>From: </STRONG>T. Daniel Crawford (<EM>crawdad@vt.edu</EM>)<BR>
<STRONG>Date: </STRONG>Sun Jan  7 12:21:09 2001
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#86">[ date ]</A>
<A HREF="index.shtml#86">[ thread ]</A>
<A HREF="subject.shtml#86">[ subject ]</A>
<A HREF="author.shtml#86">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0087.shtml">Greg Lindahl: "RE: memory address space on alpha Linux"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0085.shtml">Richard Henderson: "Re: memory address space on alpha Linux"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0085.shtml">Richard Henderson: "Re: memory address space on alpha Linux"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0088.shtml">Greg Lindahl: "RE: memory address space on alpha Linux"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0085.shtml">T. Daniel Crawford: "Re: memory address space on alpha Linux"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
On Sun, 7 Jan 2001, Richard Henderson wrote:
<BR>
<EM>&gt;
</EM><BR>
<EM>&gt; &gt; More to the point, though, is the fact that I have some older Fortran code
</EM><BR>
<EM>&gt; &gt; that I'm attempting to port to alpha Linux which fails when these addresses
</EM><BR>
<EM>&gt; &gt; are very, very, very far apart as they are here.
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; You can handle an address above 6GB, but not above 32TB?
</EM><BR>
<EM>&gt; Or are you doing something amazingly strange with 32-bit
</EM><BR>
<EM>&gt; displacements against a fake undimensioned array?
</EM><BR>
<P>You are very perceptive, as that's pretty much exactly what's going on.
<BR>
You may not be interested, but here's what this old code (which I did not
<BR>
write!) is doing with these addresses:
<BR>
<P>In order to have access to dynamically allocated memory blocks, the Fortran
<BR>
program calls a C malloc() (or the extended Fortran intrinsic equivalent)
<BR>
to allocate one big chunk.  Then the location of this memory relative to
<BR>
an unitialized blank common block (with one element, an integer*4 array
<BR>
called ICORE) is computed as an offset in integer*4 words.  This offset is
<BR>
named I0 and is placed in another common block called &quot;ISTART&quot;.  This allows
<BR>
the subroutines in the program to have access to the dynamically allocated
<BR>
memory using code like:
<BR>
<P>C Here are the common blocks with blank common and the offset to the available chunk
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COMMON // ICORE(1)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COMMON /ISTART/ I0
<BR>
<P>C Here's a simple access example
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ICORE(I0) = 9
<BR>
<P>My problem is that I0 (and all other addresses computed from it) is just a
<BR>
32-bit integer, not large enough to handle address offsets as large as I'm
<BR>
seeing under alpha Linux.  If the dynamically allocated memory were placed
<BR>
in the first 2^32 bits of the address space, then I could get away with a
<BR>
&quot;correct&quot; computation of I0 and then still have access to the core.  This is
<BR>
what is happening under Tru64 Unix, so we're simply getting lucky there.
<BR>
<P>As it stands, I believe I will have to go through the code and convert all address
<BR>
references to 64-bit.  It's not a pleasant thought, but I'm thinking of hiring a graduate
<BR>
student part-time to do it for me. :)
<BR>
<P><EM>&gt; &gt; If there is a way to cleanly force the addresses to be closer
</EM><BR>
<EM>&gt; &gt; together, I need to learn about it.
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; See mallopt.
</EM><BR>
<P>I'll see if I can find it.  Thanks!
<BR>
<P>-Daniel
<BR>
<P><PRE>
-- 
T. Daniel Crawford                           Department of Chemistry
crawdad@vt.edu                                    Virginia Tech
www.chem.vt.edu/chem-dept/crawford    Voice: 540-231-7760  FAX: 540-231-3255
<P><P><P>_______________________________________________
Axp-list mailing list
Axp-list@redhat.com
https://listman.redhat.com/mailman/listinfo/axp-list
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0087.shtml">Greg Lindahl: "RE: memory address space on alpha Linux"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0085.shtml">Richard Henderson: "Re: memory address space on alpha Linux"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0085.shtml">Richard Henderson: "Re: memory address space on alpha Linux"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0088.shtml">Greg Lindahl: "RE: memory address space on alpha Linux"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0085.shtml">T. Daniel Crawford: "Re: memory address space on alpha Linux"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat Mar  3 12:54:54 2001 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
