<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: gprof and iprobe</H1> 
	
<!-- received="Mon Jan 15 17:36:35 2001" -->
<!-- isoreceived="20010116013635" -->
<!-- sent="Mon, 15 Jan 2001 11:00:26 -0500 (EST)" -->
<!-- isosent="20010115160026" -->
<!-- name="T. Daniel Crawford" -->
<!-- email="crawdad@vt.edu" -->
<!-- subject="Re: gprof and iprobe" -->
<!-- id="Pine.LNX.4.30.0101151048500.28235-100000@orion.chem.vt.edu" -->
<!-- inreplyto="ysq66jmjpwl.fsf@therese.dcs.gla.ac.uk" -->
<STRONG>Subject: </STRONG>Re: gprof and iprobe<BR>
<STRONG>From: </STRONG>T. Daniel Crawford (<EM>crawdad@vt.edu</EM>)<BR>
<STRONG>Date: </STRONG>Mon Jan 15 08:00:26 2001
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#212">[ date ]</A>
<A HREF="index.shtml#212">[ thread ]</A>
<A HREF="subject.shtml#212">[ subject ]</A>
<A HREF="author.shtml#212">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0213.shtml">Michal Jaegermann: "Re: gprof and iprobe"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0211.shtml">Sebastian Moeller: "Re: AXP 150 and AHA-1742A and RedHat 6.2"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0192.shtml">Rolf Neugebauer: "Re: gprof and iprobe"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0213.shtml">Michal Jaegermann: "Re: gprof and iprobe"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0192.shtml">T. Daniel Crawford: "Re: gprof and iprobe"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Hi, all,
<BR>
<P>Several members of this mailing list have helped me considerably in my
<BR>
efforts to compile and optimize some numerically intensive scientific
<BR>
Fortran code on my new alpha Linux workstations.  I thought perhaps some
<BR>
of you might be interested in the current state of this effort and some
<BR>
interesting problems I have encountered with the CXML provided by Compaq.
<BR>
<P>Once I had my code up and running, I ran some benchmarks and noticed a
<BR>
substantial difference in its performance under alpha Linux (AL) vs. Tru64.
<BR>
Here's some output from my &quot;time&quot; command:
<BR>
<P>Tru64: 257.027u 3.176s 4:29.85 96.4%   0+1336k 101+18143io 94pf+0w
<BR>
AL:    256.284u 209.641s 7:46.35 99.9% 0+0k 0+0io 0pf+0w
<BR>
<P>Note the gigantic difference in system and wall timings.  This calculation
<BR>
requires only about 3% of the real memory on this machine.  Note also that
<BR>
I am using the Compaq compilers on both systems with identical optimization
<BR>
flags and the Compaq Extended Math Library (CXML).  (The tcsh time command
<BR>
apparently can't report page faults, I/O or memory use yet.)
<BR>
<P>Using a hacked version of iprobe that Jeff Sturm got running on my (EV67)
<BR>
system, I was able to determine that almost all the time difference between
<BR>
AL and Tru64 was in the kernel's virtual memory system.  Here's some iprobe
<BR>
output for a &quot;cyclesa&quot; event with the above benchmark:
<BR>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sample Image Total
<BR>
Name                                                    Count   Pct   Pct
<BR>
----                                                    -----   ---   ---
<BR>
/home/users/aces2/alphaev6-unknown-linux-gnu/bin/xvcc  178362        52.3
<BR>
&nbsp;&nbsp;icopy_                                                32960  18.5   9.7
<BR>
&nbsp;&nbsp;symtr3_                                                7310   4.1   2.1
<BR>
&nbsp;&nbsp;dgemm_nn                                              28550  16.0   8.4
<BR>
&nbsp;&nbsp;dgemm_nt                                              31551  17.7   9.3
<BR>
&nbsp;&nbsp;dgemm_tn                                               7438   4.2   2.2
<BR>
&nbsp;&nbsp;dgemm_tt                                              14562   8.2   4.3
<BR>
vmlinux                                                162618        47.7
<BR>
&nbsp;&nbsp;entMM                                                  7252   4.5   2.1
<BR>
&nbsp;&nbsp;schedule                                               7925   4.9   2.3
<BR>
&nbsp;&nbsp;do_anonymous_page                                     83341  51.2  24.4
<BR>
&nbsp;&nbsp;__get_free_pages                                       9329   5.7   2.7
<BR>
&nbsp;&nbsp;__invalidate_buffers                                  10335   6.4   3.0
<BR>
<P>The kernel is taking up nearly 50% of the total cycles!!  Another list
<BR>
member, Wes Bauske, noted that some problems with the CXML and Linux memory
<BR>
management were once discussed on this list.  So, I grabbed the University
<BR>
of Tenneessee's Atlas Project code in order to have a fast replacement
<BR>
for the matrix-matrix multiplication routines (part of the BLAS library)
<BR>
on which my code depends quite heavily.  Here's the new timing:
<BR>
<P>Tru64: 257.027u 3.176s 4:29.85 96.4%   0+1336k 101+18143io 94pf+0w
<BR>
AL:    260.141u 100.795s 6:05.01 98.8% 0+0k 0+0io 0pf+0w
<BR>
<P>There is clearly a substantial improvement in the code's performance using
<BR>
the ATLAS BLAS over the CXML.  However, I'm still far from satisfied with
<BR>
such a large system time.  The kernel is still taking up a lot of the total
<BR>
run time, so even ATLAS is not perfect in its interaction with the VM
<BR>
system.  (Note that these timings basically the same between the 2.2.17
<BR>
and 2.4.0 kernels.)
<BR>
<P>The bottom line: there are definitely problems with the CXML when its BLAS
<BR>
routines are used under alpha Linux, particularly with the memory management
<BR>
code in the kernel.  ATLAS provides improvement over the CXML, but is still
<BR>
far from optimal.  I'm now trying to see if I can play with the kernel's
<BR>
paging parameters (under /proc/sys/vm) to see if the timings change at all,
<BR>
but I am a real novice with the kernel, so this is all trial and error.
<BR>
<P>If anyone has any additional thoughts or experience in this arena, I would
<BR>
be most appreciative of your advice.
<BR>
<P>-Daniel
<BR>
<P><PRE>
-- 
T. Daniel Crawford                           Department of Chemistry
crawdad@vt.edu                                    Virginia Tech
www.chem.vt.edu/chem-dept/crawford    Voice: 540-231-7760  FAX: 540-231-3255
<P><P><P>_______________________________________________
Axp-list mailing list
Axp-list@redhat.com
https://listman.redhat.com/mailman/listinfo/axp-list
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0213.shtml">Michal Jaegermann: "Re: gprof and iprobe"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0211.shtml">Sebastian Moeller: "Re: AXP 150 and AHA-1742A and RedHat 6.2"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0192.shtml">Rolf Neugebauer: "Re: gprof and iprobe"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0213.shtml">Michal Jaegermann: "Re: gprof and iprobe"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0192.shtml">T. Daniel Crawford: "Re: gprof and iprobe"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat Mar  3 12:54:54 2001 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
