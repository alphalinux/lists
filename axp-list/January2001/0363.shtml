<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: /proc/PID/stat</H1> 
	
<!-- received="Wed Jan 24 21:09:25 2001" -->
<!-- isoreceived="20010125050925" -->
<!-- sent="Wed, 24 Jan 2001 16:07:51 -0500 (EST)" -->
<!-- isosent="20010124210751" -->
<!-- name="Bharadwaj Yadavalli" -->
<!-- email="sby@ives.lkg.dec.com" -->
<!-- subject="Re: /proc/PID/stat" -->
<!-- id="200101242107.QAA13545@ives.lkg.dec.com" -->
<!-- inreplyto="3A6F26CA.9023F7D5@voicenet.com" -->
<STRONG>Subject: </STRONG>Re: /proc/PID/stat<BR>
<STRONG>From: </STRONG>Bharadwaj Yadavalli (<EM>sby@ives.lkg.dec.com</EM>)<BR>
<STRONG>Date: </STRONG>Wed Jan 24 13:07:51 2001
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#363">[ date ]</A>
<A HREF="index.shtml#363">[ thread ]</A>
<A HREF="subject.shtml#363">[ subject ]</A>
<A HREF="author.shtml#363">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0364.shtml">Michal Jaegermann: "Re: 2.4 compile - 'help me I am stupid'"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0362.shtml">James Fowler: "Re: 2.4 compile - 'help me I am stupid'"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0359.shtml">Uncle George: "Re: /proc/PID/stat"</A>
<!-- nextthread="start" -->
<LI><STRONG>Reply:</STRONG> <A HREF="0359.shtml">Bharadwaj Yadavalli: "Re: /proc/PID/stat"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;From : Uncle George &lt;gatgul@voicenet.com&gt;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date : Wed Jan 24 14:02:34 2001
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Its interesting, but its not 64bit literate. For example the integer
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stack pointer! The num of signals on alpha/linux is 64. Int will just
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hold 32 of them ( &amp; they certainly will not hold the SIG's 32 &amp; 33 used
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;py the pthread system :-{ ).
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What I wanted was a pgm that said
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pc=0x45, ps=0x46908, sp=0x20012301234 . 
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<BR>
Now I know what happened.... I sent out an old and incorrect
<BR>
version. Here is the correct one. Apologies for the mistake.
<BR>
<P><P>Bharadwaj
<BR>
<P>typedef struct statstruct_proc {
<BR>
&nbsp;&nbsp;int           pid;                      /** %d The process id. **/
<BR>
&nbsp;&nbsp;char          exName [_POSIX_PATH_MAX]; /** %s The filename of the executable **/
<BR>
&nbsp;&nbsp;char          state; /** 1 **/          /** %c R is running, S is sleeping, 
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D is sleeping in an uninterruptible wait,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Z is zombie, T is traced or stopped **/
<BR>
&nbsp;&nbsp;int           euid,                     /** %d effective user id **/
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egid;                     /** %d effective group id */					     
<BR>
&nbsp;&nbsp;int           ppid;                     /** %d The pid of the parent. **/
<BR>
&nbsp;&nbsp;int           pgrp;                     /** %d The pgrp of the process. **/
<BR>
&nbsp;&nbsp;int           session;                  /** %d The session id of the process. **/
<BR>
&nbsp;&nbsp;unsigned long tty;                      /** %lu The tty the process uses **/
<BR>
&nbsp;&nbsp;unsigned long tpgid;                    /** %lu  **/
<BR>
&nbsp;&nbsp;unsigned long	flags;                    /** %lu The flags of the process. **/
<BR>
&nbsp;&nbsp;unsigned long	minflt;                   /** %lu The number of minor faults **/
<BR>
&nbsp;&nbsp;unsigned long	cminflt;                  /** %lu The number of minor faults with childs **/
<BR>
&nbsp;&nbsp;unsigned long	majflt;                   /** %lu The number of major faults **/
<BR>
&nbsp;&nbsp;unsigned long cmajflt;                  /** %lu The number of major faults with childs **/
<BR>
&nbsp;&nbsp;long          utime;                    /** %ld user mode jiffies **/
<BR>
&nbsp;&nbsp;long          stime;                    /** %ld kernel mode jiffies **/
<BR>
&nbsp;&nbsp;long          cutime;                   /** %ld user mode jiffies with childs **/
<BR>
&nbsp;&nbsp;long          cstime;                   /** %ld kernel mode jiffies with childs **/
<BR>
&nbsp;&nbsp;long          counter;                  /** %ld process's next timeslice **/
<BR>
&nbsp;&nbsp;long          priority;                 /** %ld the standard nice value, plus fifteen **/
<BR>
&nbsp;&nbsp;unsigned long timeout;                  /** %lu The time in jiffies of the next timeout **/
<BR>
&nbsp;&nbsp;unsigned long itrealvalue;              /** %lu The time before the next SIGALRM is sent to the process **/
<BR>
&nbsp;&nbsp;long          starttime; /** 20 **/     /** %ld Time the process started after system boot **/
<BR>
&nbsp;&nbsp;unsigned long vsize;                    /** %lu Virtual memory size **/
<BR>
&nbsp;&nbsp;unsigned long rss;                      /** %lu Resident Set Size **/
<BR>
&nbsp;&nbsp;unsigned long rlim;                     /** %lu Current limit in bytes on the rss **/
<BR>
&nbsp;&nbsp;unsigned long startcode;                /** %lu The address above which program text can run **/
<BR>
&nbsp;&nbsp;unsigned long	endcode;                  /** %lu The address below which program text can run **/
<BR>
&nbsp;&nbsp;unsigned long startstack;               /** %lu The address of the start of the stack **/
<BR>
&nbsp;&nbsp;unsigned long kstkesp;                  /** %lu The current value of ESP **/
<BR>
&nbsp;&nbsp;unsigned long kstkeip;                  /** %lu The current value of EIP **/
<BR>
&nbsp;&nbsp;unsigned long	signal;                   /** %lu The bitmap of pending signals **/
<BR>
&nbsp;&nbsp;unsigned long blocked; /** 30 **/       /** %lu The bitmap of blocked signals **/
<BR>
&nbsp;&nbsp;unsigned long sigignore;                /** %lu The bitmap of ignored signals **/
<BR>
&nbsp;&nbsp;unsigned long sigcatch;                 /** %lu The bitmap of catched signals **/
<BR>
&nbsp;&nbsp;unsigned long  wchan;  /** 33 **/       /** %lu **/
<BR>
&nbsp;&nbsp;/* Ignoring 4 more fields that get printed on 2.2.17, for now */		
<BR>
} procinfo;
<BR>
<P>int get_proc_info(pid_t pid, procinfo * pinfo)
<BR>
{
<BR>
&nbsp;&nbsp;char szFileName [_POSIX_PATH_MAX],
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;szStatStr [2048],
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;*s, *t;
<BR>
&nbsp;&nbsp;FILE *fp;
<BR>
&nbsp;&nbsp;struct stat st;
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;if (pinfo == NULL) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;errno = EINVAL;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return -1;
<BR>
&nbsp;&nbsp;}
<BR>
<P>&nbsp;&nbsp;sprintf (szFileName, &quot;/proc/%u/stat&quot;, (unsigned) pid);
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;if (access(szFileName, R_OK) == -1) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return (pinfo-&gt;pid = -1);
<BR>
&nbsp;&nbsp;}
<BR>
<P>&nbsp;&nbsp;if (stat(szFileName, &amp;st) == -1) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pinfo-&gt;euid = st.st_uid;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pinfo-&gt;egid = st.st_gid;
<BR>
&nbsp;&nbsp;} else {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pinfo-&gt;euid = pinfo-&gt;egid = -1;
<BR>
&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;if ((fp = fopen (szFileName, &quot;r&quot;)) == NULL) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return (pinfo-&gt;pid = -1);
<BR>
&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;if ((s = fgets (szStatStr, 2048, fp)) == NULL) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;fclose (fp);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;return (pinfo-&gt;pid = -1);
<BR>
&nbsp;&nbsp;}
<BR>
<P>&nbsp;&nbsp;sscanf (szStatStr, &quot;%u&quot;, &amp;(pinfo-&gt;pid));
<BR>
&nbsp;&nbsp;s = strchr (szStatStr, '(') + 1;
<BR>
&nbsp;&nbsp;t = strchr (szStatStr, ')');
<BR>
&nbsp;&nbsp;strncpy (pinfo-&gt;exName, s, t - s);
<BR>
&nbsp;&nbsp;pinfo-&gt;exName [t - s] = '\0';
<BR>
&nbsp;&nbsp;/* out of fs/proc/array.c 
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sprintf(t + 2, &quot;%c %d %d %d %d %d %lu %lu &quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;%lu %lu %lu %lu %lu %ld %ld %ld %ld %ld %ld &quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;%lu %lu %ld %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %d %d&quot;);
<BR>
&nbsp;&nbsp;*/
<BR>
&nbsp;&nbsp;sscanf (t + 2, &quot;%c %d %d %d %d %d %lu %lu %lu %lu &quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*       1  2  3  4  5  6  7   8   9   10 */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;%lu %lu %lu %ld %ld %ld %ld %lu %ld %lu &quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*11  12  13  14  15  16  17  18  19  20  */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;%lu %ld %lu %lu %lu %lu %lu %lu %lu %lu &quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*21  22  23  24  25  26  27  28  29  30 */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;%lu %lu %lu&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*31  32  33 */
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;state),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;ppid),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;pgrp),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;session),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;tty),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;tpgid),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;flags),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;minflt),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;cminflt),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;majflt),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;cmajflt),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;utime),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;stime),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;cutime),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;cstime),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;counter),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;priority),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;timeout),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;itrealvalue),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;starttime),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;vsize),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;rss),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;rlim),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;startcode),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;endcode),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;startstack),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;kstkesp),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;kstkeip),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;signal),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;blocked),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;sigignore),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;sigcatch),
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;(pinfo-&gt;wchan));
<BR>
&nbsp;&nbsp;fclose (fp);
<BR>
&nbsp;&nbsp;return 0;
<BR>
}
<BR>
<P><P><P>_______________________________________________
<BR>
Axp-list mailing list
<BR>
Axp-list@redhat.com
<BR>
https://listman.redhat.com/mailman/listinfo/axp-list
<BR>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0364.shtml">Michal Jaegermann: "Re: 2.4 compile - 'help me I am stupid'"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0362.shtml">James Fowler: "Re: 2.4 compile - 'help me I am stupid'"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0359.shtml">Uncle George: "Re: /proc/PID/stat"</A>
<!-- nextthread="start" -->
<LI><STRONG>Reply:</STRONG> <A HREF="0359.shtml">Bharadwaj Yadavalli: "Re: /proc/PID/stat"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat Mar  3 12:54:55 2001 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
