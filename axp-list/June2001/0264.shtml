<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: Redhat 7.1 Alpha</H1> 
	
<!-- received="Mon Jun 25 16:39:13 2001" -->
<!-- isoreceived="20010625233913" -->
<!-- sent="Mon, 25 Jun 2001 09:53:11 -0400" -->
<!-- isosent="20010625135311" -->
<!-- name="'Bryce'" -->
<!-- email="bryce@redhat.com" -->
<!-- subject="Re: Redhat 7.1 Alpha" -->
<!-- id="3B374247.9479080F@redhat.com" -->
<!-- inreplyto="7B367970106CD1118F4300805F31E0C102060C14@rc0nt1.rc.tudelft.nl" -->
<STRONG>Subject: </STRONG>Re: Redhat 7.1 Alpha<BR>
<STRONG>From: </STRONG>'Bryce' (<EM>bryce@redhat.com</EM>)<BR>
<STRONG>Date: </STRONG>Mon Jun 25 06:53:11 2001
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#264">[ date ]</A>
<A HREF="index.shtml#264">[ thread ]</A>
<A HREF="subject.shtml#264">[ subject ]</A>
<A HREF="author.shtml#264">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0265.shtml">Speedracer: "Re: Alpha will die"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0263.shtml">Peter Bech: "Alpha will die"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0255.shtml">Vegt, Henry van der: "RE: Redhat 7.1 Alpha"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0216.shtml">Michal Jaegermann: "Re: Problem Building 2.4.5-ac16"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0255.shtml">'Bryce': "Re: Redhat 7.1 Alpha"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Ok that one slipped by me, I'll see about getting it re added
<BR>
Unfortunately with 7.1 already released I can't fix it for the ISO's 8/
<BR>
<P>appologies
<BR>
<P>Phil
<BR>
=--=
<BR>
<P>&quot;Vegt, Henry van der&quot; wrote:
<BR>
<P><EM>&gt; HI
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; As sebastion mentioned the jensens also have the EV4 bug and it seems
</EM><BR>
<EM>&gt; similar as you describe.
</EM><BR>
<EM>&gt; All the 2.2.x kernels we had to patch the traps.c file with the following
</EM><BR>
<EM>&gt; difference
</EM><BR>
<EM>&gt; diff traps.c.org traps.c.new
</EM><BR>
<EM>&gt; 339c339,343
</EM><BR>
<EM>&gt; &lt;                       /* 21264 (except pass 1) has precise exceptions.  */
</EM><BR>
<EM>&gt; ---
</EM><BR>
<EM>&gt; &gt;                       #ifdef CONFIG_ALPHA_EV4
</EM><BR>
<EM>&gt; &gt;                                if (alpha_fp_emul(regs.pc))
</EM><BR>
<EM>&gt; &gt;                                          return;
</EM><BR>
<EM>&gt; &gt;                         #else
</EM><BR>
<EM>&gt; &gt;                         /* 21264 (except pass 1) has precise exceptions.
</EM><BR>
<EM>&gt; */
</EM><BR>
<EM>&gt; 341a346
</EM><BR>
<EM>&gt; &gt;                         #endif
</EM><BR>
<EM>&gt; 420,421c425,432
</EM><BR>
<EM>&gt; &lt;                       if (alpha_fp_emul(regs.pc - 4))
</EM><BR>
<EM>&gt; &lt;                               return;
</EM><BR>
<EM>&gt; ---
</EM><BR>
<EM>&gt; &gt;                         if (alpha_fp_emul(regs.pc))
</EM><BR>
<EM>&gt; &gt;                         {
</EM><BR>
<EM>&gt; &gt;                                 /* Increment the PC so that the program in
</EM><BR>
<EM>&gt; &gt;                                    user space continues */
</EM><BR>
<EM>&gt; &gt;                                 regs.pc += 4;
</EM><BR>
<EM>&gt; &gt;                                  return;
</EM><BR>
<EM>&gt; &gt;                         }
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; I do not know witch kernel in 7.1 is used but til RH 7.0 with 2.2.19 this
</EM><BR>
<EM>&gt; was the case.
</EM><BR>
<EM>&gt; I do not have any hope that this will be include in the new kernels but if
</EM><BR>
<EM>&gt; someone can manage that it would be fine for all jensens, multia and other
</EM><BR>
<EM>&gt; old alpha's.
</EM><BR>
<EM>&gt; Is the new relaese still based on 2.2.x kernels or is this problem also
</EM><BR>
<EM>&gt; under 2.4.x kernels ?
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; Henry van der Vegt
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; &gt; -----Oorspronkelijk bericht-----
</EM><BR>
<EM>&gt; &gt; Van:  Phillip Ezolt
</EM><BR>
<EM>&gt; &gt; Verzonden:    donderdag 21 juni 2001 22:10
</EM><BR>
<EM>&gt; &gt; Aan:  axp-list@redhat.com
</EM><BR>
<EM>&gt; &gt; Onderwerp:    Re: Redhat 7.1 Alpha
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Michal,
</EM><BR>
<EM>&gt; &gt; &gt; My interest here is purely theoretical, as I do not have Multia,
</EM><BR>
<EM>&gt; &gt; &gt; but does this test below uniquely identifies a machine with a broken
</EM><BR>
<EM>&gt; &gt; &gt; PAL?
</EM><BR>
<EM>&gt; &gt; &gt; .....
</EM><BR>
<EM>&gt; &gt; I didn't write the test, but I believe that it does.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Right.  But then this kernel with a fix would break existing
</EM><BR>
<EM>&gt; &gt; &gt; Multias booting from milo.  No?
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; The hard-coded fix WOULD break Multias booting from milo, correct.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Any chance that this may happen?  I would not bet on it.  And once
</EM><BR>
<EM>&gt; &gt; &gt; we would have around multias with broken PAL and other which would
</EM><BR>
<EM>&gt; &gt; &gt; be already fixed then the fun would be even bigger. :-)
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; No.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Does this generalized patch take care about all problems mentioned?  It
</EM><BR>
<EM>&gt; &gt; &gt; seems to be testing in a bootup sequence if PC is advanced or not and
</EM><BR>
<EM>&gt; &gt; &gt; modifying traps behaviour depending on that.  How wide this was tested?
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; We tried it on our multia here, and it worked.  We did NOT try it on
</EM><BR>
<EM>&gt; &gt; other non-multia machines.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; But instead of setting a flag and checking it every time when a fixup
</EM><BR>
<EM>&gt; &gt; &gt; may be needed one could set once a &quot;fixup offset&quot; to 0 or 4, depending
</EM><BR>
<EM>&gt; &gt; &gt; on a check, and add it unconditionally to 'regs.pc' in a proper place.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; That sounds good.  I don't currently have a multia either, so I can't
</EM><BR>
<EM>&gt; &gt; test it.  (The person who wrote the original patch has moved on to other
</EM><BR>
<EM>&gt; &gt; employment and took the multia with him.)
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Probably will be simpler and faster and PAL is not likely to change
</EM><BR>
<EM>&gt; &gt; &gt; under our feet - or I am mistaken?
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Yes, it should not change.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; This whole thing strikes me as similar to the &quot;fixup&quot; code used to
</EM><BR>
<EM>&gt; &gt; work around various bugs in the X86 processors.   It should probably be
</EM><BR>
<EM>&gt; &gt; done in that area of code.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; --Phil
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; Compaq:  High Performance Server Division/Benchmark Performance
</EM><BR>
<EM>&gt; &gt; Engineering
</EM><BR>
<EM>&gt; &gt; ---------------- Alpha, The Fastest Processor on Earth
</EM><BR>
<EM>&gt; &gt; --------------------
</EM><BR>
<EM>&gt; &gt; Phillip.Ezolt@compaq.com        |C|O|M|P|A|Q|
</EM><BR>
<EM>&gt; &gt; ezolt@perf.zko.dec.com
</EM><BR>
<EM>&gt; &gt; ------------------- See the results at www.spec.org
</EM><BR>
<EM>&gt; &gt; -----------------------
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; On Thu, 21 Jun 2001, Michal Jaegermann wrote:
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; On Thu, Jun 21, 2001 at 12:37:15PM -0400, Phillip Ezolt wrote:
</EM><BR>
<EM>&gt; &gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; &gt; This is the result the following.  (See below.)
</EM><BR>
<EM>&gt; &gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; &gt; I suggest that redhat/Linus/Alan apply last patch to the kernel.
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; My interest here is purely theoretical, as I do not have Multia,
</EM><BR>
<EM>&gt; &gt; &gt; but does this test below uniquely identifies a machine with a broken
</EM><BR>
<EM>&gt; &gt; &gt; PAL?
</EM><BR>
<EM>&gt; &gt; &gt; .....
</EM><BR>
<EM>&gt; &gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; &gt; Workaround:  Boot from MILO.  It has the Palcode fixed.
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Right.  But then this kernel with a fix would break existing
</EM><BR>
<EM>&gt; &gt; &gt; Multias booting from milo.  No?
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; &gt; Even better would be fixed palcode....
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Any chance that this may happen?  I would not bet on it.  And once
</EM><BR>
<EM>&gt; &gt; &gt; we would have around multias with broken PAL and other which would
</EM><BR>
<EM>&gt; &gt; &gt; be already fixed then the fun would be even bigger. :-)
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; ....
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; &gt;               case 4: /* opDEC */
</EM><BR>
<EM>&gt; &gt; &gt; &gt;                 if (implver() == IMPLVER_EV4) {
</EM><BR>
<EM>&gt; &gt; &gt; &gt; +#if 1 /* alpha SRM */
</EM><BR>
<EM>&gt; &gt; &gt; &gt; +                       regs.pc += 4;
</EM><BR>
<EM>&gt; &gt; &gt; &gt; +#endif /* alpha SRM */
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; No other boxes with the same return value from 'implver()'?
</EM><BR>
<EM>&gt; &gt; &gt; Sigh!  What a mess.  I remember seeing the above at the beggining
</EM><BR>
<EM>&gt; &gt; &gt; of this year and I had the same misgivings.
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; .....
</EM><BR>
<EM>&gt; &gt; &gt; &gt; Before he left, Bill Carr product the following patch.. It is more
</EM><BR>
<EM>&gt; &gt; general
</EM><BR>
<EM>&gt; &gt; &gt; &gt; than the one above:
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Does this generalized patch take care about all problems mentioned?  It
</EM><BR>
<EM>&gt; &gt; &gt; seems to be testing in a bootup sequence if PC is advanced or not and
</EM><BR>
<EM>&gt; &gt; &gt; modifying traps behaviour depending on that.  How wide this was tested?
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; But instead of setting a flag and checking it every time when a fixup
</EM><BR>
<EM>&gt; &gt; &gt; may be needed one could set once a &quot;fixup offset&quot; to 0 or 4, depending
</EM><BR>
<EM>&gt; &gt; &gt; on a check, and add it unconditionally to 'regs.pc' in a proper place.
</EM><BR>
<EM>&gt; &gt; &gt; Probably will be simpler and faster and PAL is not likely to change
</EM><BR>
<EM>&gt; &gt; &gt; under our feet - or I am mistaken?
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt;   Michal
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; _______________________________________________
</EM><BR>
<EM>&gt; &gt; &gt; Axp-list mailing list
</EM><BR>
<EM>&gt; &gt; &gt; Axp-list@redhat.com
</EM><BR>
<EM>&gt; &gt; &gt; https://listman.redhat.com/mailman/listinfo/axp-list
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; _______________________________________________
</EM><BR>
<EM>&gt; &gt; Axp-list mailing list
</EM><BR>
<EM>&gt; &gt; Axp-list@redhat.com
</EM><BR>
<EM>&gt; &gt; https://listman.redhat.com/mailman/listinfo/axp-list
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; _______________________________________________
</EM><BR>
<EM>&gt; Axp-list mailing list
</EM><BR>
<EM>&gt; Axp-list@redhat.com
</EM><BR>
<EM>&gt; https://listman.redhat.com/mailman/listinfo/axp-list
</EM><BR>
<P><P><P>_______________________________________________
<BR>
Axp-list mailing list
<BR>
Axp-list@redhat.com
<BR>
https://listman.redhat.com/mailman/listinfo/axp-list
<BR>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0265.shtml">Speedracer: "Re: Alpha will die"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0263.shtml">Peter Bech: "Alpha will die"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0255.shtml">Vegt, Henry van der: "RE: Redhat 7.1 Alpha"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0216.shtml">Michal Jaegermann: "Re: Problem Building 2.4.5-ac16"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0255.shtml">'Bryce': "Re: Redhat 7.1 Alpha"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Thu Jul  5 05:45:29 2001 PDT <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
