<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: gcc 2.96 optimization bug on RedHat7.0/alpha</H1> 
	
<!-- received="Wed Apr 18 18:12:20 2001" -->
<!-- isoreceived="20010419011220" -->
<!-- sent="Wed, 18 Apr 2001 13:07:24 -0400" -->
<!-- isosent="20010418170724" -->
<!-- name="alvin" -->
<!-- email="alvin@iplink.net" -->
<!-- subject="Re: gcc 2.96 optimization bug on RedHat7.0/alpha" -->
<!-- id="3ADDC9CC.25847588@iplink.net" -->
<!-- inreplyto="4DAF89CD261ED011A47B0000C0F973BF016FB619@norge.is.sal.ksu.edu" -->
<STRONG>Subject: </STRONG>Re: gcc 2.96 optimization bug on RedHat7.0/alpha<BR>
<STRONG>From: </STRONG>alvin (<EM>alvin@iplink.net</EM>)<BR>
<STRONG>Date: </STRONG>Wed Apr 18 10:07:24 2001
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#413">[ date ]</A>
<A HREF="index.shtml#413">[ thread ]</A>
<A HREF="subject.shtml#413">[ subject ]</A>
<A HREF="author.shtml#413">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0414.shtml">Nelson Brito: "Re: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0412.shtml">T. Daniel Crawford: "Re: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0409.shtml">Hoover, Tony: "RE: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<!-- nextthread="start" -->
<LI><STRONG>Reply:</STRONG> <A HREF="0409.shtml">alvin: "Re: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
&quot;Hoover, Tony&quot; wrote:
<BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Granted, however a compile time warning that your source will generate
</EM><BR>
<EM>&gt; &quot;_undefined_  behavior&quot; should not be out of the question.
</EM><BR>
<EM>&gt; ---------------------------------------------------------------------------
</EM><BR>
<EM>&gt; Tony Hoover, Network Administrator
</EM><BR>
<EM>&gt; KSU - Salina, College of Technology
</EM><BR>
<EM>&gt; mailto:hoover@sal.ksu.edu
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &quot;Don't Blend in...&quot;
</EM><BR>
<EM>&gt; ----------------------------------------------------------------------------
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; ----------
</EM><BR>
<EM>&gt; &gt; From:         David Woodhouse[SMTP:dwmw2@infradead.org]
</EM><BR>
<EM>&gt; &gt; Reply To:     axp-list@redhat.com
</EM><BR>
<EM>&gt; &gt; Sent:         Wednesday, April 18, 2001 11:17 AM
</EM><BR>
<EM>&gt; &gt; To:   axp-list@redhat.com
</EM><BR>
<EM>&gt; &gt; Subject:      Re: gcc 2.96 optimization bug on RedHat7.0/alpha
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; gatgul@voicenet.com said:
</EM><BR>
<EM>&gt; &gt; &gt;  BTW your opinion about the code posted is broken, is also ur opinion.
</EM><BR>
<EM>&gt; &gt; &gt;  It is perfectly correct IMHO . I guess it just does not live up to
</EM><BR>
<EM>&gt; &gt; &gt; some one else's arbitrary standard.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; The 'arbitrary standard' to which you refer is known as ISO C99.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; If you desire a compiler which lives up to other standards, that's fine -
</EM><BR>
<EM>&gt; &gt; just don't report bugs against gcc. Do you see people reporting gcc to be
</EM><BR>
<EM>&gt; &gt; buggy because it doesn't compile FORTRAN code to produce the results you
</EM><BR>
<EM>&gt; &gt; expect?
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; I'm sorry that u believe this but i believe that the results from
</EM><BR>
<EM>&gt; &gt; &gt; -O0 == -O1 == -O2 == -O3 == -O4
</EM><BR>
<EM>&gt; &gt; &gt; should all be the same.  If any one of them failes to be equal, then
</EM><BR>
<EM>&gt; &gt; &gt; the compiler failed to produce the correct code to derive the correct
</EM><BR>
<EM>&gt; &gt; &gt; results.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; That is an interesting opinion. The rest of the world, however, accepts
</EM><BR>
<EM>&gt; &gt; the
</EM><BR>
<EM>&gt; &gt; fact that according to the specifications of the C language, certain code
</EM><BR>
<EM>&gt; &gt; has _undefined_ behaviour. If the compiler encounters such code, it's
</EM><BR>
<EM>&gt; &gt; perfectly entitled to send insulting mail to your boss and sleep with your
</EM><BR>
<EM>&gt; &gt; wife. It's certainly not required to do the same thing each time.
</EM><BR>
<P>Then the compiler should allways print out a line that is somthing like
<BR>
&quot;you code may not work as you expect(you have been warned)&quot;
<BR>
<P>Just a little try at humor. But on a more serious note. C as a language
<BR>
has a number of issues about order of evaluation of expressions and what
<BR>
will happen if you have side effects because of expression evaluation. I
<BR>
missed part of the early part of the thread but at this point it seems
<BR>
to be a discussion about what a compiler will do compared to what you
<BR>
might expect.
<BR>
<P>Concider
<BR>
<P><P>int x = 1;
<BR>
int y = 2;
<BR>
int fval = 4;
<BR>
<P>int f(int val)
<BR>
{
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return fval/=val;
<BR>
}
<BR>
<P>t = f(x) + f(y);
<BR>
<P>is    t = 4 + 2
<BR>
or is t = 2 + 2
<BR>
<P>since &quot;+&quot; is commutitive it is legitimate to evaluate either f(x) or
<BR>
f(y) first but because of side effects you will get different results. A
<BR>
compiler can pick any order of evaluation so long as the operator
<BR>
precedance is kept.
<BR>
Now this is an extreem example but it is possible to find more subtile
<BR>
examples of this in everyday code.
<BR>
<P><P><PRE>
-- 
Alvin Starr                   ||   voice: (416)585-9971
Interlink Connectivity        ||   fax:   (416)585-9974
alvin@iplink.net              ||
<P><P><P>_______________________________________________
Axp-list mailing list
Axp-list@redhat.com
https://listman.redhat.com/mailman/listinfo/axp-list
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0414.shtml">Nelson Brito: "Re: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0412.shtml">T. Daniel Crawford: "Re: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0409.shtml">Hoover, Tony: "RE: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<!-- nextthread="start" -->
<LI><STRONG>Reply:</STRONG> <A HREF="0409.shtml">alvin: "Re: gcc 2.96 optimization bug on RedHat7.0/alpha"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat May  5 06:18:13 2001 PDT <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
