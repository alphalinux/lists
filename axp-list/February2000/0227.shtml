<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> how to simulate an unaligned ldl_l</H1> 
	
<!-- received="Mon Feb 14 08:24:49 2000" -->
<!-- isoreceived="20000214162449" -->
<!-- sent="Sun, 13 Feb 2000 18:20:48 -0500 (EST)" -->
<!-- isosent="20000213232048" -->
<!-- name="Ross A. Knepper" -->
<!-- email="rak@notfoo.nightmoose.net" -->
<!-- subject="how to simulate an unaligned ldl_l" -->
<!-- id="Pine.LNX.4.10.10002131812010.16865-100000@notfoo.nightmoose.net" -->
<STRONG>Subject: </STRONG>how to simulate an unaligned ldl_l<BR>
<STRONG>From: </STRONG>Ross A. Knepper (<EM>rak@notfoo.nightmoose.net</EM>)<BR>
<STRONG>Date: </STRONG>Sun Feb 13 15:20:48 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#227">[ date ]</A>
<A HREF="index.shtml#227">[ thread ]</A>
<A HREF="subject.shtml#227">[ subject ]</A>
<A HREF="author.shtml#227">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0228.shtml">Jay.Estabrook@compaq.com: "Re: how to simulate an unaligned ldl_l"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0226.shtml">Sean Hunter: "Re: rexec problems"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0228.shtml">Jay.Estabrook@compaq.com: "Re: how to simulate an unaligned ldl_l"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
i've been looking at porting reiserfs to alpha.  unfortunately, it has a
<BR>
bunch of unaligned data accesses.  naturally, intel doesnt care.  on
<BR>
alpha, most unaligned LDx/STx instructions are emulated by a software
<BR>
trap (outside the kernel that is -- i don't know about inside).  however,
<BR>
this is not the case with the load_locked and store_conditional
<BR>
instructions.
<BR>
<P>i'm looking at a number of routines that use these instructions for
<BR>
atomicity, via clear_bit(), set_bit(), etc. in asm/bitops.h.  is there any
<BR>
clever way to circumvent this problem?  the only hack i can think of at
<BR>
the moment is to use ldl_u to extract it, put it into an aligned longword
<BR>
buffer and do the ldl_l on that address instead.  i feel like i'd have to
<BR>
be insane to try this, however :)
<BR>
<P>anybody had this problem before?  found a solution?
<BR>
<P>thanks much!
<BR>
<P>&nbsp;-ross
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0228.shtml">Jay.Estabrook@compaq.com: "Re: how to simulate an unaligned ldl_l"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0226.shtml">Sean Hunter: "Re: rexec problems"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0228.shtml">Jay.Estabrook@compaq.com: "Re: how to simulate an unaligned ldl_l"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Wed Mar  1 06:26:23 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
