<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: how to simulate an unaligned ldl_l</H1> 
	
<!-- received="Mon Feb 14 15:35:16 2000" -->
<!-- isoreceived="20000214233516" -->
<!-- sent="Mon, 14 Feb 2000 08:15:23 -0500" -->
<!-- isosent="20000214131523" -->
<!-- name="Peter Rival" -->
<!-- email="frival@zk3.dec.com" -->
<!-- subject="Re: how to simulate an unaligned ldl_l" -->
<!-- id="38A7FFEB.9FF8CC1@zk3.dec.com" -->
<!-- inreplyto="200002140507.AAA02511@alpha2.estabrook.org" -->
<STRONG>Subject: </STRONG>Re: how to simulate an unaligned ldl_l<BR>
<STRONG>From: </STRONG>Peter Rival (<EM>frival@zk3.dec.com</EM>)<BR>
<STRONG>Date: </STRONG>Mon Feb 14 05:15:23 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#230">[ date ]</A>
<A HREF="index.shtml#230">[ thread ]</A>
<A HREF="subject.shtml#230">[ subject ]</A>
<A HREF="author.shtml#230">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0231.shtml">J. Pedro Sousa do Amaral: "set_program_attributes message"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0229.shtml">H.C. van der Vegt: "RE: RH 6.1 initscripts on jensen"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0228.shtml">Jay.Estabrook@compaq.com: "Re: how to simulate an unaligned ldl_l"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0231.shtml">J. Pedro Sousa do Amaral: "set_program_attributes message"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0228.shtml">Peter Rival: "Re: how to simulate an unaligned ldl_l"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Jay.Estabrook@compaq.com wrote:
<BR>
<P><EM>&gt; &gt;&gt;&gt; &quot;Ross A. Knepper&quot; said:
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; i've been looking at porting reiserfs to alpha.  unfortunately, it has a
</EM><BR>
<EM>&gt; &gt; bunch of unaligned data accesses.  naturally, intel doesnt care.  on
</EM><BR>
<EM>&gt; &gt; alpha, most unaligned LDx/STx instructions are emulated by a software
</EM><BR>
<EM>&gt; &gt; trap (outside the kernel that is -- i don't know about inside).  however,
</EM><BR>
<EM>&gt; &gt; this is not the case with the load_locked and store_conditional
</EM><BR>
<EM>&gt; &gt; instructions.
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; Uh, oh... :-\
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; &gt; i'm looking at a number of routines that use these instructions for
</EM><BR>
<EM>&gt; &gt; atomicity, via clear_bit(), set_bit(), etc. in asm/bitops.h.  is there any
</EM><BR>
<EM>&gt; &gt; clever way to circumvent this problem?  the only hack i can think of at
</EM><BR>
<EM>&gt; &gt; the moment is to use ldl_u to extract it, put it into an aligned longword
</EM><BR>
<EM>&gt; &gt; buffer and do the ldl_l on that address instead.  i feel like i'd have to
</EM><BR>
<EM>&gt; &gt; be insane to try this, however :)
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; anybody had this problem before?  found a solution?
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; The only solution is to align those accesses.
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; The load_locked and store_conditional *MUST* be used with aligned operands,
</EM><BR>
<EM>&gt; otherwise what they are attempting to do (protect change of state from SMP
</EM><BR>
<EM>&gt; meddling) cannot be relied on.
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; And I believe strongly that this will be a problem on other architectures
</EM><BR>
<EM>&gt; beside Alpha. You must convince the authors to rework the data structures to
</EM><BR>
<EM>&gt; size and align the important fields correctly for operation on other
</EM><BR>
<EM>&gt; platorms than INTEL.
</EM><BR>
<EM>&gt;
</EM><BR>
<P>Jay - would it be enough to just simply wrap these data structures in an
<BR>
__aligned(32) -type declaration?  Worst case I'd think would be that we'd have
<BR>
to re-order struct members,which should only be a problem if they are written
<BR>
to disk as is.  But that's what conversion programs are for ;)
<BR>
<P>&nbsp;- Pete
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0231.shtml">J. Pedro Sousa do Amaral: "set_program_attributes message"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0229.shtml">H.C. van der Vegt: "RE: RH 6.1 initscripts on jensen"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0228.shtml">Jay.Estabrook@compaq.com: "Re: how to simulate an unaligned ldl_l"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0231.shtml">J. Pedro Sousa do Amaral: "set_program_attributes message"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0228.shtml">Peter Rival: "Re: how to simulate an unaligned ldl_l"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Wed Mar  1 06:26:23 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
