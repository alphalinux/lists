<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: Memory leaks</H1> 
	
<!-- received="Wed Feb 16 21:38:15 2000" -->
<!-- isoreceived="20000217053815" -->
<!-- sent="Wed, 16 Feb 2000 16:31:35 -0500 (EST)" -->
<!-- isosent="20000216213135" -->
<!-- name="Phillip Ezolt" -->
<!-- email="ezolt@perf.zko.dec.com" -->
<!-- subject="Re: Memory leaks" -->
<!-- id="Pine.OSF.3.96.1000216162323.28667R-100000@perf.zko.dec.com" -->
<!-- inreplyto="38AB1338.13735879@larc.nasa.gov" -->
<STRONG>Subject: </STRONG>Re: Memory leaks<BR>
<STRONG>From: </STRONG>Phillip Ezolt (<EM>ezolt@perf.zko.dec.com</EM>)<BR>
<STRONG>Date: </STRONG>Wed Feb 16 13:31:35 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#307">[ date ]</A>
<A HREF="index.shtml#307">[ thread ]</A>
<A HREF="subject.shtml#307">[ subject ]</A>
<A HREF="author.shtml#307">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0308.shtml">Jeffery A. White: "Re: Memory leaks"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0306.shtml">David Singleton: "Re: Memory leaks"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0305.shtml">Jeffery A. White: "Re: Memory leaks"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0308.shtml">Jeffery A. White: "Re: Memory leaks"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0305.shtml">Phillip Ezolt: "Re: Memory leaks"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Jeff,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Linux looks things a little differently than MSDOS/Windows does. 
<BR>
<P>In an ideal Linux system, you want to have NO free memory.  Linux uses
<BR>
all extra memory as a disk cache.  When user programs request memory,
<BR>
it will give up some of some the disk cache so that they can use it.  
<BR>
<P>Your application probably does about 500MB of disk I/O.  Linux keeps this
<BR>
in its buffers.  (You have 250MB in buffers, &amp; 300MB in the page cache)
<BR>
<P>No free memory is a GOOD thing.  Linux will give up buffers when
<BR>
programs need it.  When they don't Linux will use the memory to make
<BR>
the system faster.
<BR>
<P>--Phil
<BR>
<P>Compaq:  High Performance Server Division/Benchmark Performance Engineering 
<BR>
---------------- Alpha, The Fastest Processor on Earth --------------------
<BR>
Phillip.Ezolt@compaq.com        |C|O|M|P|A|Q|        ezolt@perf.zko.dec.com
<BR>
------------------- See the results at www.spec.org -----------------------
<BR>
<P>On Wed, 16 Feb 2000, Jeffery A. White wrote:
<BR>
<P><EM>&gt; Brian Pomerantz wrote:
</EM><BR>
<EM>&gt; &gt; 
</EM><BR>
<EM>&gt; &gt; On Wed, Feb 16, 2000 at 03:13:12PM -0500, Jeffery A. White wrote:
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Here are the results from free
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; Rebooted the node and typing free gives :
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt;       total    used    free    shared  buffers  cached
</EM><BR>
<EM>&gt; &gt; &gt; Mem: 1035416  32504   1002912    15112  3296    16104
</EM><BR>
<EM>&gt; &gt; &gt; -/+ buffers/cache:    13104    1022312
</EM><BR>
<EM>&gt; &gt; &gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; After job completion free gives:
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt;       total   used    free     shared  buffers   cached
</EM><BR>
<EM>&gt; &gt; &gt; Mem: 1035416 595392  440024     15112   244536  298736
</EM><BR>
<EM>&gt; &gt; &gt; -/+ buffers/cache:   52120     983296
</EM><BR>
<EM>&gt; &gt; &gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; 
</EM><BR>
<EM>&gt; &gt; If you look at the second line from free on both runs, the first
</EM><BR>
<EM>&gt; &gt; number is the amount of memory actually being used by kernel/programs
</EM><BR>
<EM>&gt; &gt; (minus buffer and cache) and the second number is the amount of
</EM><BR>
<EM>&gt; &gt; &quot;free&quot; memory that can be reclaimed if need be.  If you run your
</EM><BR>
<EM>&gt; &gt; program a few more times and look at this second line, it should be
</EM><BR>
<EM>&gt; &gt; about the same on the last two runs.  There will probably be some swap
</EM><BR>
<EM>&gt; &gt; used after a while but it should stabilize and not try to claim more.
</EM><BR>
<EM>&gt; &gt; If you run your program several times and swap continues to grow, then
</EM><BR>
<EM>&gt; &gt; you have a problem.  There is a way to poke the proc file system to
</EM><BR>
<EM>&gt; &gt; tell the kernel max buffer and cache usage which could minimize swap
</EM><BR>
<EM>&gt; &gt; usage a little more, but I don't recall how to do this off the top of
</EM><BR>
<EM>&gt; &gt; my head.  The tradeoff there is you'll still have around the same
</EM><BR>
<EM>&gt; &gt; amount of disk I/O if you are writing a lot to disk and using swap is
</EM><BR>
<EM>&gt; &gt; probably faster than writing dirty pages to disk.  I would say from
</EM><BR>
<EM>&gt; &gt; these results you probably don't have a memory leak, but you should
</EM><BR>
<EM>&gt; &gt; run your program a few more times to watch the behavior of your swap
</EM><BR>
<EM>&gt; &gt; usage.
</EM><BR>
<EM>&gt; &gt; 
</EM><BR>
<EM>&gt; &gt; BAPper
</EM><BR>
<EM>&gt; &gt; 
</EM><BR>
<EM>&gt;  
</EM><BR>
<EM>&gt;  I am a little confused by what you have said above
</EM><BR>
<EM>&gt; The first number (under the total column) would appear to me
</EM><BR>
<EM>&gt; to be constant and be the total memory on the machine.
</EM><BR>
<EM>&gt; The second number (under the used column) I though was the
</EM><BR>
<EM>&gt; memory currently in use.
</EM><BR>
<EM>&gt; The third number (under the free column) I thought was the
</EM><BR>
<EM>&gt; memory currently availble.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; I guess I don't uderstand what swap means in this context. I
</EM><BR>
<EM>&gt; thought if swap &quot;used&quot; becomes non-zero that I am reading and
</EM><BR>
<EM>&gt; writting to disk to make up for the memory I don't have which would be
</EM><BR>
<EM>&gt; death to my throughput, not to mention my floating point. 
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; I tried you suggestion about multiple jobs in succesion and I
</EM><BR>
<EM>&gt; get from free after the first job ends
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt;              total       used       free     shared    buffers    
</EM><BR>
<EM>&gt; cached
</EM><BR>
<EM>&gt; Mem:       1035416     609352     426064      15128     254800    
</EM><BR>
<EM>&gt; 300840
</EM><BR>
<EM>&gt; -/+ buffers/cache:      53712     981704
</EM><BR>
<EM>&gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; While the second job runs I get 
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt;              total       used       free     shared    buffers    
</EM><BR>
<EM>&gt; cached
</EM><BR>
<EM>&gt; Mem:       1035416     811648     223768      18584     254800    
</EM><BR>
<EM>&gt; 301768
</EM><BR>
<EM>&gt; -/+ buffers/cache:     255080     780336
</EM><BR>
<EM>&gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; After the second job ends I get 
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt;              total       used       free     shared    buffers    
</EM><BR>
<EM>&gt; cached
</EM><BR>
<EM>&gt; Mem:       1035416     609568     425848      15128     254920    
</EM><BR>
<EM>&gt; 300840
</EM><BR>
<EM>&gt; -/+ buffers/cache:      53808     981608
</EM><BR>
<EM>&gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; While the third job runs I get
</EM><BR>
<EM>&gt;  
</EM><BR>
<EM>&gt;              total       used       free     shared    buffers    
</EM><BR>
<EM>&gt; cached
</EM><BR>
<EM>&gt; Mem:       1035416     841784     193632      18872     254920    
</EM><BR>
<EM>&gt; 302016
</EM><BR>
<EM>&gt; -/+ buffers/cache:     284848     750568
</EM><BR>
<EM>&gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; After the third job ends I get 
</EM><BR>
<EM>&gt;               total       used       free     shared    buffers    
</EM><BR>
<EM>&gt; cached
</EM><BR>
<EM>&gt; Mem:       1035416     609520     425896      15128     254920    
</EM><BR>
<EM>&gt; 300840
</EM><BR>
<EM>&gt; -/+ buffers/cache:      53760     981656
</EM><BR>
<EM>&gt; Swap:      2094560          0    2094560
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; I guess what I don't uderstand is why the free does not every
</EM><BR>
<EM>&gt; go back up to near the total number  when the job completes its
</EM><BR>
<EM>&gt; execution.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Jeffery A. White
</EM><BR>
<EM>&gt; email : j.a.white@larc.nasa.gov
</EM><BR>
<EM>&gt; Phone : (757) 864-6882 ; Fax : (757) 864-6243
</EM><BR>
<EM>&gt; URL   : <A HREF="http://hapb-www.larc.nasa.gov/~jawhite/">http://hapb-www.larc.nasa.gov/~jawhite/</A>
</EM><BR>
<P><P><P><P><P><P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0308.shtml">Jeffery A. White: "Re: Memory leaks"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0306.shtml">David Singleton: "Re: Memory leaks"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0305.shtml">Jeffery A. White: "Re: Memory leaks"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0308.shtml">Jeffery A. White: "Re: Memory leaks"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0305.shtml">Phillip Ezolt: "Re: Memory leaks"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Wed Mar  1 06:26:23 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
