<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: how to simulate an unaligned ldl_l</H1> 
	
<!-- received="Mon Feb 14 21:13:33 2000" -->
<!-- isoreceived="20000215051333" -->
<!-- sent="Mon, 14 Feb 2000 10:51:08 -0500" -->
<!-- isosent="20000214155108" -->
<!-- name="Joseph A. Martin" -->
<!-- email="jmartin@linux08.mro.dec.com" -->
<!-- subject="Re: how to simulate an unaligned ldl_l" -->
<!-- id="200002141551.KAA24524@linux08.mro.dec.com" -->
<!-- inreplyto="38A7FFEB.9FF8CC1@zk3.dec.com" -->
<STRONG>Subject: </STRONG>Re: how to simulate an unaligned ldl_l<BR>
<STRONG>From: </STRONG>Joseph A. Martin (<EM>jmartin@linux08.mro.dec.com</EM>)<BR>
<STRONG>Date: </STRONG>Mon Feb 14 07:51:08 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#232">[ date ]</A>
<A HREF="index.shtml#232">[ thread ]</A>
<A HREF="subject.shtml#232">[ subject ]</A>
<A HREF="author.shtml#232">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0233.shtml">Edward Lukacs: "Re: Aplix for alpha ?"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0231.shtml">J. Pedro Sousa do Amaral: "set_program_attributes message"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0230.shtml">Peter Rival: "Re: how to simulate an unaligned ldl_l"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0235.shtml">Richard Henderson: "Re: how to simulate an unaligned ldl_l"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0230.shtml">Joseph A. Martin: "Re: how to simulate an unaligned ldl_l"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
<EM>&gt; i'm looking at a number of routines that use these instructions for
</EM><BR>
<EM>&gt; atomicity, via clear_bit(), set_bit(), etc. in asm/bitops.h.  is there any
</EM><BR>
<EM>&gt; clever way to circumvent this problem?  the only hack i can think of at
</EM><BR>
<EM>&gt; the moment is to use ldl_u to extract it, put it into an aligned longword
</EM><BR>
<EM>&gt; buffer and do the ldl_l on that address instead.  i feel like i'd have to
</EM><BR>
<EM>&gt; be insane to try this, however :)
</EM><BR>
<P>Doesn't sound like it would work either, since you're not effectively
<BR>
locking the transfer between the aligned memory word and the unaligned
<BR>
memory.  I like the __aligned(32) suggestion best, but if you want to
<BR>
muck with the bitop functions instead of the data structures, consider
<BR>
a modification like this:
<BR>
<P>extern __inline__ void set_bit(unsigned long nr, volatile void * addr)
<BR>
{
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long oldbit;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned long temp;
<BR>
#ifdef UNALIGNED_addr
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned int * m;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nr += ((unsigned long)addr &amp; 3) &lt;&lt; 3;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr = (void *)((unsigned long)addr &amp; ~(3L));
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m = ((unsigned int *) addr) + (nr &gt;&gt; 5);
<BR>
#else
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unsigned int * m = ((unsigned int *) addr) + (nr &gt;&gt; 5);
<BR>
#endif
<BR>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__asm__ __volatile__(
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;1:	ldl_l %0,%1\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;	and %0,%3,%2\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;	bne %2,2f\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;	xor %0,%3,%0\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;	stl_c %0,%1\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;	beq %0,3f\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;2:\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;.section .text2,\&quot;ax\&quot;\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;3:	br 1b\n&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;.previous&quot;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&quot;=&amp;r&quot; (temp), &quot;=m&quot; (*m), &quot;=&amp;r&quot; (oldbit)
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&quot;Ir&quot; (1UL &lt;&lt; (nr &amp; 31)), &quot;m&quot; (*m));
<BR>
}
<BR>
<P><P><P><P>\Joe   [Joseph.Martin@Compaq.com	Joseph A. Martin
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compaq Computer Corporation
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;200 Forest Street MRO1-2/K20
<BR>
&nbsp;(508) 467-2100				Marlboro, MA  01752  U.S.A.
<BR>
&nbsp;]
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0233.shtml">Edward Lukacs: "Re: Aplix for alpha ?"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0231.shtml">J. Pedro Sousa do Amaral: "set_program_attributes message"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0230.shtml">Peter Rival: "Re: how to simulate an unaligned ldl_l"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0235.shtml">Richard Henderson: "Re: how to simulate an unaligned ldl_l"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0230.shtml">Joseph A. Martin: "Re: how to simulate an unaligned ldl_l"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Wed Mar  1 06:26:23 2000 PST <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
