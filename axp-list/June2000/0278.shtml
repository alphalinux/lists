<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;</H1> 
	
<!-- received="Fri Jun 23 01:40:30 2000" -->
<!-- isoreceived="20000623084030" -->
<!-- sent="Thu, 22 Jun 2000 20:28:15 +0000" -->
<!-- isosent="20000622202815" -->
<!-- name="Peter Rival" -->
<!-- email="frival@zk3.dec.com" -->
<!-- subject="Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;" -->
<!-- id="395276DF.553EB208@zk3.dec.com" -->
<!-- inreplyto="000601bfdc7d$f05fdbe0$e4844b89@hptilap.hpti.com" -->
<STRONG>Subject: </STRONG>Re: 2.2.16 Alpha: "Fix SMP rescheduling with lock held"<BR>
<STRONG>From: </STRONG>Peter Rival (<EM>frival@zk3.dec.com</EM>)<BR>
<STRONG>Date: </STRONG>Thu Jun 22 13:28:15 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#278">[ date ]</A>
<A HREF="index.shtml#278">[ thread ]</A>
<A HREF="subject.shtml#278">[ subject ]</A>
<A HREF="author.shtml#278">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0279.shtml">Bryan J. Smith: "Benefits of Linux/Alpha over Linux/x86?"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0277.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0277.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0290.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0277.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Greg Lindahl wrote:
<BR>
<P><EM>&gt; OK, so I finally got a node to hang:
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; sched.c:30 spinlock stuck in pbs_mom at fffffc000032cd64(1) owner
</EM><BR>
<EM>&gt; a.out.system14. at fffffc000032cd64(0) sched.c:30
</EM><BR>
<EM>&gt; sched.c:30 spinlock stuck in pbs_mom at fffffc000032cd64(1) owner
</EM><BR>
<EM>&gt; a.out.system14. at fffffc000032cd64(0) sched.c:30
</EM><BR>
<EM>&gt; sched.c:30 spinlock stuck in pbs_mom at fffffc000032cd64(1) owner
</EM><BR>
<EM>&gt; a.out.system14. at fffffc000032cd64(0) sched.c:30
</EM><BR>
<EM>&gt;
</EM><BR>
<P>Hmm...that comes from this code right here (sched.c:821):
<BR>
...
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kstat.context_swtch++;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get_mmu_context(next);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch_to(prev, next, prev);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;__schedule_tail(prev);
<BR>
same_process:
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reacquire_kernel_lock(current);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;
<BR>
...
<BR>
<P>So, that means it's our good friend the kernel_lock again.  How long did the
<BR>
system hang for before you killed it?  I'm just a little curious if it would
<BR>
have recovered &quot;eventually&quot;.  Are you either doing 1) a lot of data
<BR>
transfers or 2) a lot of heavily threaded work?
<BR>
<P>Problem here is that this code probably will do the same thing in this
<BR>
section of code in 2.3/2.4 - that particular section of code is roughly the
<BR>
same.
<BR>
<P><EM>&gt;
</EM><BR>
<EM>&gt; This is printed once every few minutes on the console of the hung system.
</EM><BR>
<EM>&gt; There are two copies of a.out.system14. running.  That's some of the
</EM><BR>
<EM>&gt; problem with the magic of the kernel_lock - it makes it a little too easy
</EM><BR>
<EM>&gt; to use... :(
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; The kernel is the RedHat-compiled 2.2.14-6.0smp.
</EM><BR>
<EM>&gt;
</EM><BR>
<EM>&gt; My question is: is this bug fixed by the 2.2.16 patch to alpha/smp.c ? I
</EM><BR>
<EM>&gt; suppose I should try it, but it's nice to understand these things well
</EM><BR>
<EM>&gt; enough to know...
</EM><BR>
<EM>&gt;
</EM><BR>
<P>It doesn't look like it should be.  That code is in pointer_lock() which is
<BR>
only called by smp_call_function() (at least as far as cscope is concerned,
<BR>
anyway).  It's entirely possible that it might, however, if somehow your
<BR>
code is making heavy use of the smp_call_function() in some way.  (I'm
<BR>
guessing a bit here, but hey - it's better than nothing. ;)  Obviously Jay
<BR>
or rth (or whomever submitted the change) would know better.
<BR>
<P>&nbsp;- Pete
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0279.shtml">Bryan J. Smith: "Benefits of Linux/Alpha over Linux/x86?"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0277.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0277.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0290.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0277.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat Jul  1 05:31:31 2000 PDT <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
