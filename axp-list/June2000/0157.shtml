<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;</H1> 
	
<!-- received="Tue Jun 13 22:34:03 2000" -->
<!-- isoreceived="20000614053403" -->
<!-- sent="Tue, 13 Jun 2000 16:58:11 -0500" -->
<!-- isosent="20000613215811" -->
<!-- name="W Bauske" -->
<!-- email="wsb@paralleldata.com" -->
<!-- subject="Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;" -->
<!-- id="3946AE73.3CC38F4@paralleldata.com" -->
<!-- inreplyto="39468032.F5D3B9BD@zk3.dec.com" -->
<STRONG>Subject: </STRONG>Re: 2.2.16 Alpha: "Fix SMP rescheduling with lock held"<BR>
<STRONG>From: </STRONG>W Bauske (<EM>wsb@paralleldata.com</EM>)<BR>
<STRONG>Date: </STRONG>Tue Jun 13 14:58:11 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#157">[ date ]</A>
<A HREF="index.shtml#157">[ thread ]</A>
<A HREF="subject.shtml#157">[ subject ]</A>
<A HREF="author.shtml#157">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0158.shtml">Kurt Ludwig: "RE: Old Digital DEC3000 Server with TurboChannel"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0156.shtml">Hoover, Tony: "RE: Old Digital DEC3000 Server with TurboChannel"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0150.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0176.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0150.shtml">W Bauske: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
Peter Rival wrote:
<BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; W Bauske wrote:
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; Jay Estabrook wrote:
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt; &gt; That's important - that you see them primarily during boot, rather
</EM><BR>
<EM>&gt; &gt; &gt; than often during normal operation. That's indicative of boot tasks
</EM><BR>
<EM>&gt; &gt; &gt; that simply take a long time and happen to need to hold a lock during
</EM><BR>
<EM>&gt; &gt; &gt; that time. I'd be much more concerned if these happened frequently
</EM><BR>
<EM>&gt; &gt; &gt; during normal operation.
</EM><BR>
<EM>&gt; &gt; &gt;
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; They happen alot on my UP2K's in production.
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock grabbed in pvmd3 at fffffc00003c4368(0) 2032 ticks
</EM><BR>
<EM>&gt; &gt; select.c:43 spinlock stuck in pvmd3 at fffffc000035f630(0) owner zm32mig_s_pvm
</EM><BR>
<EM>&gt; &gt; at fffffc000034fb78(1) read_write.c:43
</EM><BR>
<EM>&gt; &gt; select.c:43 spinlock grabbed in pvmd3 at fffffc000035f630(0) 2033 ticks
</EM><BR>
<EM>&gt; &gt; select.c:43 spinlock stuck in pvmd3 at fffffc000035f630(0) owner zm32mig_s_pvm
</EM><BR>
<EM>&gt; &gt; at fffffc000034fb78(1) read_write.c:43
</EM><BR>
<EM>&gt; &gt; select.c:43 spinlock grabbed in pvmd3 at fffffc000035f630(0) 1949 ticks
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock stuck in pvmd3 at fffffc00003c4368(1) owner zm32mig_s_pvm
</EM><BR>
<EM>&gt; &gt; at fffffc000034fb78(0) read_write.c:43
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock grabbed in pvmd3 at fffffc00003c4368(1) 2024 ticks
</EM><BR>
<EM>&gt; &gt; sched.c:30 spinlock stuck in pvmd3 at fffffc000032cea4(1) owner zm32mig_s_pvm at
</EM><BR>
<EM>&gt; &gt; fffffc000034fb78(0) read_write.c:43
</EM><BR>
<EM>&gt; &gt; sched.c:30 spinlock grabbed in pvmd3 at fffffc000032cea4(1) 1943 ticks
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock stuck in pvmd3 at fffffc00003c4368(1) owner zm32mig_s_pvm
</EM><BR>
<EM>&gt; &gt; at fffffc000034fb78(0) read_write.c:43
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock grabbed in pvmd3 at fffffc00003c4368(1) 2062 ticks
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock stuck in pvmd3 at fffffc00003c4368(0) owner zm32mig_s_pvm
</EM><BR>
<EM>&gt; &gt; at fffffc000034fb78(1) read_write.c:43
</EM><BR>
<EM>&gt; &gt; socket.c:43 spinlock grabbed in pvmd3 at fffffc00003c4368(0) 2267 ticks
</EM><BR>
<EM>&gt; &gt;
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; Which release was this?  I'm trying to collect a hit list of locks to go take a
</EM><BR>
<EM>&gt; look at, and from first glance, it appears this is another lock_kernel() call.
</EM><BR>
<EM>&gt; Interesting thing is, it's being held in what appears to be llseek(), and tried for
</EM><BR>
<EM>&gt; in something I can't find (socket.c:43 is still in the comments, at least in 2.2 as
</EM><BR>
<EM>&gt; is select.c:43...).  Seeing as this file:line# pair is generated from the gcc
</EM><BR>
<EM>&gt; __FILE__ and __LINE__ macros, I'm not sure what's wrong there - Jay?
</EM><BR>
<EM>&gt; 
</EM><BR>
<P>This is kernel 2.2.15pre17 with a couple minor patches, nfsv3, and
<BR>
ide DMA patches. llseek makes no sense. pvmd shouldn't write to disk.
<BR>
It is more likely socket calls only, both local and remote. PVM uses
<BR>
a UNIX type socket to talk to local processes I believe and an INET
<BR>
socket to talk to the world.
<BR>
<P>If Greg can reproduce similar messages, then I'll let him work with you
<BR>
all to sort it out. My point in posting was just to confirm this was
<BR>
not a boot time only problem.
<BR>
<P><EM>&gt; BTW, it appears that this is happening when the pvmd3 process is reading
</EM><BR>
<EM>&gt; (apparently large amounts of) data from a socket and writing it to the file, or
</EM><BR>
<EM>&gt; perhaps the inverse.  This could _perhaps_ be improved by writing the data out
</EM><BR>
<EM>&gt; faster, rather than batching it up in cache.  It's only a guess, but it might help
</EM><BR>
<EM>&gt; if your disk is fast enough.  *shrug*
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt;  - Pete  (still muttering about the !@#$*$@#^ kernel lock...)
</EM><BR>
<P>Large is relative. I'm sending around 16MB of data every 10-50
<BR>
secs. Total input dataset is around 300-400GB for this run. The
<BR>
systems each use quite fast disk. hdparm shows them at 15+MB/sec.
<BR>
There is practically no disk I/O in this code on worker nodes except
<BR>
for the end when they save their results.
<BR>
<P><P>Wes
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0158.shtml">Kurt Ludwig: "RE: Old Digital DEC3000 Server with TurboChannel"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0156.shtml">Hoover, Tony: "RE: Old Digital DEC3000 Server with TurboChannel"</A>
<LI><STRONG>In reply to:</STRONG> <A HREF="0150.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0176.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Reply:</STRONG> <A HREF="0150.shtml">W Bauske: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat Jul  1 05:31:30 2000 PDT <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
