<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"> 
     <HTML> 
     <HEAD> 
     <TITLE>Axp-List Archive</TITLE> 
     <LINK REV="made" HREF="mailto:mailto-address"> 
     <HEAD> 
     <BODY BGCOLOR="#DC9D33" TEXT="#000000" LINK="#DD0000" ALINK="#CC0000" VLINK="#CC0000">
		<CENTER>  <!--#exec cgi="/cgi-bin/banmat1.cgi"--></CENTER>

     <H1 ALIGN=CENTER>Axp-List Archive<BR> Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;</H1> 
	
<!-- received="Mon Jun 12 22:48:28 2000" -->
<!-- isoreceived="20000613054828" -->
<!-- sent="Mon, 12 Jun 2000 17:26:29 -0500 (EST)" -->
<!-- isosent="20000612222629" -->
<!-- name="Brad Lucier" -->
<!-- email="lucier@math.purdue.edu" -->
<!-- subject="Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;" -->
<!-- id="200006122226.RAA20663@polya.math.purdue.edu" -->
<!-- inreplyto="2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;" -->
<STRONG>Subject: </STRONG>Re: 2.2.16 Alpha: "Fix SMP rescheduling with lock held"<BR>
<STRONG>From: </STRONG>Brad Lucier (<EM>lucier@math.purdue.edu</EM>)<BR>
<STRONG>Date: </STRONG>Mon Jun 12 15:26:29 2000
<P>
<UL>
<LI><STRONG>Messages sorted by:</STRONG> 
<A HREF="date.shtml#135">[ date ]</A>
<A HREF="index.shtml#135">[ thread ]</A>
<A HREF="subject.shtml#135">[ subject ]</A>
<A HREF="author.shtml#135">[ author ]</A>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0136.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0134.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Maybe in reply to:</STRONG> <A HREF="0133.shtml">Greg Lindahl: "2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0015.shtml">tibor@lib.uaa.alaska.edu: "Re: floppyless install?"</A>
<LI><STRONG>Maybe reply:</STRONG> <A HREF="0133.shtml">Brad Lucier: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- reply="end" -->
</UL>
<HR>
<!-- body="start" -->
<P>
<EM>&gt; Greg Lindahl wrote:
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; &gt; I have a bunch of DS20Es running 2.2.14-6.0smp (the kernel compiled by
</EM><BR>
<EM>&gt; &gt; RedHat for RH 6.2), and they have several spinlock stuck messages while
</EM><BR>
<EM>&gt; &gt; booting, and more systematically happen when doing certain things (loading a
</EM><BR>
<EM>&gt; &gt; particular module). What's more annoying is that the machines occasionally
</EM><BR>
<EM>&gt; &gt; freeze under heavy load, and when they do, they're periodically printing a
</EM><BR>
<EM>&gt; &gt; spinlock message on their console.
</EM><BR>
<EM>&gt; 
</EM><BR>
<EM>&gt; The &quot;spinlock stuck&quot; message is just a debugging aid AFAIK, albeit a possible
</EM><BR>
<EM>&gt; hint for problems in design.  I routinely have AIM runs where I'll see these
</EM><BR>
<EM>&gt; messages scroll on by the dozens, and performance is still quite good.  If
</EM><BR>
<EM>&gt; you're really concerned, you could also check out the crash tools from Mission
</EM><BR>
<EM>&gt; Critical (haven't tried them, but have used their counterparts on Tru64 and
</EM><BR>
<EM>&gt; they're quite good).  If you're still concerned, maybe we can try to replicate
</EM><BR>
<EM>&gt; what's happening here and I'll take a closer look.
</EM><BR>
<P>I've recently been having lockups, too, with the 2.2.16 kernel with
<BR>
spinlock stuck messages.  I recompiled with egcs-1.1.2 instead of
<BR>
gcc-2.95.1 and made changes to the following files, which fix some
<BR>
64bit uncleanliness, all instances of which were given warnings by
<BR>
both compilers.  Now I'm crossing my fingers.
<BR>
<P>If anyone wants to send them to Alan Cox, go right ahead.
<BR>
<P>Brad Lucier
<BR>
<P>===================================================================
<BR>
RCS file: RCS/nfs2xdr.c,v
<BR>
retrieving revision 1.1
<BR>
diff -c -r1.1 nfs2xdr.c
<BR>
*** nfs2xdr.c	2000/06/09 21:19:39	1.1
<BR>
--- nfs2xdr.c	2000/06/09 21:22:00
<BR>
***************
<BR>
*** 445,451 ****
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk(KERN_WARNING
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;NFS: server %s, readdir reply truncated\n&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clnt-&gt;cl_server);
<BR>
! 			printk(KERN_WARNING &quot;NFS: nr=%d, slots=%d, len=%d\n&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nr, (end - p), len);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clnt-&gt;cl_flags |= NFS_CLNTF_BUFSIZE;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<BR>
--- 445,451 ----
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk(KERN_WARNING
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;NFS: server %s, readdir reply truncated\n&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clnt-&gt;cl_server);
<BR>
! 			printk(KERN_WARNING &quot;NFS: nr=%d, slots=%ld, len=%d\n&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nr, (end - p), len);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clnt-&gt;cl_flags |= NFS_CLNTF_BUFSIZE;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<BR>
===================================================================
<BR>
RCS file: RCS/xdr.c,v
<BR>
retrieving revision 1.1
<BR>
diff -c -r1.1 xdr.c
<BR>
*** xdr.c	2000/06/09 21:23:00	1.1
<BR>
--- xdr.c	2000/06/09 21:24:06
<BR>
***************
<BR>
*** 96,102 ****
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((len = ntohl(*p++)) != sizeof(*f)) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk(KERN_NOTICE
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;lockd: bad fhandle size %x (should be %d)\n&quot;,
<BR>
! 			len, sizeof(*f));
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memcpy(f, p, sizeof(*f));
<BR>
--- 96,102 ----
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ((len = ntohl(*p++)) != sizeof(*f)) {
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk(KERN_NOTICE
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;lockd: bad fhandle size %x (should be %d)\n&quot;,
<BR>
! 			len, (int) sizeof(*f));
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return NULL;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memcpy(f, p, sizeof(*f));
<BR>
===================================================================
<BR>
RCS file: RCS/svcsock.c,v
<BR>
retrieving revision 1.1
<BR>
diff -c -r1.1 svcsock.c
<BR>
*** svcsock.c	2000/06/09 21:24:50	1.1
<BR>
--- svcsock.c	2000/06/09 21:29:00
<BR>
***************
<BR>
*** 266,274 ****
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_fs(oldfs);
<BR>
&nbsp;&nbsp;#endif
<BR>
&nbsp;&nbsp;
<BR>
! 	dprintk(&quot;svc: socket %p sendto([%p %d... ], %d, %d) = %d\n&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rqstp-&gt;rq_sock,
<BR>
! 			iov[0].iov_base, iov[0].iov_len, nr,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buflen, len);
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len;
<BR>
--- 266,274 ----
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_fs(oldfs);
<BR>
&nbsp;&nbsp;#endif
<BR>
&nbsp;&nbsp;
<BR>
! 	dprintk(&quot;svc: socket %p sendto([%p %ld... ], %d, %d) = %d\n&quot;,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rqstp-&gt;rq_sock,
<BR>
! 			iov[0].iov_base, (long) iov[0].iov_len, nr,
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buflen, len);
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len;
<BR>
***************
<BR>
*** 326,333 ****
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_fs(oldfs);
<BR>
&nbsp;&nbsp;#endif
<BR>
&nbsp;&nbsp;
<BR>
! 	dprintk(&quot;svc: socket %p recvfrom(%p, %d) = %d\n&quot;, rqstp-&gt;rq_sock,
<BR>
! 				iov[0].iov_base, iov[0].iov_len, len);
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len;
<BR>
&nbsp;&nbsp;}
<BR>
--- 326,333 ----
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_fs(oldfs);
<BR>
&nbsp;&nbsp;#endif
<BR>
&nbsp;&nbsp;
<BR>
! 	dprintk(&quot;svc: socket %p recvfrom(%p, %ld) = %d\n&quot;, rqstp-&gt;rq_sock,
<BR>
! 				iov[0].iov_base, (long) iov[0].iov_len, len);
<BR>
&nbsp;&nbsp;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return len;
<BR>
&nbsp;&nbsp;}
<BR>
===================================================================
<BR>
RCS file: RCS/aic7xxx.c,v
<BR>
retrieving revision 1.1
<BR>
diff -c -r1.1 aic7xxx.c
<BR>
*** aic7xxx.c	2000/06/08 17:00:45	1.1
<BR>
--- aic7xxx.c	2000/06/08 17:02:36
<BR>
***************
<BR>
*** 5320,5327 ****
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!(scb-&gt;flags &amp; SCB_ACTIVE) || (scb-&gt;cmd == NULL))
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk(WARN_LEAD &quot;invalid scb during WIDE_RESIDUE flags:0x%x &quot;
<BR>
!                  &quot;scb-&gt;cmd:0x%x\n&quot;, p-&gt;host_no, CTL_OF_SCB(scb),
<BR>
!                  scb-&gt;flags, (unsigned int)scb-&gt;cmd);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;
<BR>
--- 5320,5327 ----
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!(scb-&gt;flags &amp; SCB_ACTIVE) || (scb-&gt;cmd == NULL))
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk(WARN_LEAD &quot;invalid scb during WIDE_RESIDUE flags:0x%x &quot;
<BR>
!                  &quot;scb-&gt;cmd:0x%lx\n&quot;, p-&gt;host_no, CTL_OF_SCB(scb),
<BR>
!                  scb-&gt;flags, (unsigned long)scb-&gt;cmd);
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<BR>
&nbsp;&nbsp;
<BR>
<P><PRE>
-- 
To unsubscribe: send e-mail to axp-list-request@redhat.com with
'unsubscribe' as the subject.  Do not send it to axp-list@redhat.com
</PRE>
<P><!-- body="end" -->
<HR>
<P>
<UL>
<!-- next="start" -->
<LI><STRONG>Next message:</STRONG> <A HREF="0136.shtml">Greg Lindahl: "RE: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Previous message:</STRONG> <A HREF="0134.shtml">Peter Rival: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<LI><STRONG>Maybe in reply to:</STRONG> <A HREF="0133.shtml">Greg Lindahl: "2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- nextthread="start" -->
<LI><STRONG>Next in thread:</STRONG> <A HREF="0015.shtml">tibor@lib.uaa.alaska.edu: "Re: floppyless install?"</A>
<LI><STRONG>Maybe reply:</STRONG> <A HREF="0133.shtml">Brad Lucier: "Re: 2.2.16 Alpha: &quot;Fix SMP rescheduling with lock held&quot;"</A>
<!-- reply="end" -->
</UL>
<!-- trailer="footer" -->
<HR> 
     <P> 
     <SMALL> 
     <EM> 
     This archive was generated by  <A HREF="http://www.landfield.com/hypermail">hypermail version 2a22 </A> on Sat Jul  1 05:31:30 2000 PDT <BR>
	Send any problems or questions about this archive to <A HREF="mailto:webmaster@alphalinux.org">webmaster@alphalinux.org</A>. 
     </EM> 
     </SMALL> 
     </BODY> 
     </HTML> 
